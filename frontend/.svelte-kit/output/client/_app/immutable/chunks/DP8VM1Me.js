function m(){}function k(t,n){for(const e in n)t[e]=n[e];return t}function x(t){return t()}function z(){return Object.create(null)}function w(t){t.forEach(x)}function D(t){return typeof t=="function"}function F(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function M(t){return Object.keys(t).length===0}function E(t,...n){if(t==null){for(const o of n)o(void 0);return m}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function P(t,n,e){t.$$.on_destroy.push(E(n,e))}function S(t,n,e,o){if(t){const u=p(t,n,e,o);return t[0](u)}}function p(t,n,e,o){return t[1]&&o?k(e.ctx.slice(),t[1](o(n))):e.ctx}function U(t,n,e,o){return t[2],n.dirty}function A(t,n,e,o,u,g){if(u){const y=p(n,e,o,g);t.p(y,u)}}function B(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}let a;function l(t){a=t}function _(){if(!a)throw new Error("Function called outside component initialization");return a}function C(t){_().$$.on_mount.push(t)}function G(t){_().$$.after_update.push(t)}function H(t){_().$$.on_destroy.push(t)}function I(t,n){const e=t.$$.callbacks[n.type];e&&e.slice().forEach(o=>o.call(this,n))}const r=[],h=[];let s=[];const d=[],b=Promise.resolve();let f=!1;function j(){f||(f=!0,b.then(O))}function J(){return j(),b}function v(t){s.push(t)}const i=new Set;let c=0;function O(){if(c!==0)return;const t=a;do{try{for(;c<r.length;){const n=r[c];c++,l(n),q(n.$$)}}catch(n){throw r.length=0,c=0,n}for(l(null),r.length=0,c=0;h.length;)h.pop()();for(let n=0;n<s.length;n+=1){const e=s[n];i.has(e)||(i.add(e),e())}s.length=0}while(r.length);for(;d.length;)d.pop()();f=!1,i.clear(),l(t)}function q(t){if(t.fragment!==null){t.update(),w(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(v)}}function K(t){const n=[],e=[];s.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),s=n}export{H as a,G as b,P as c,h as d,v as e,M as f,a as g,z as h,D as i,O as j,l as k,K as l,x as m,m as n,C as o,r as p,j as q,w as r,F as s,J as t,I as u,S as v,A as w,B as x,U as y};
