import{w as i}from"./pifoKX6I.js";function S(e){return(e==null?void 0:e.length)!==void 0?e:Array.from(e)}console.log("üîß MusicPlayer Store: File loading...");console.log("üîß MusicPlayer Store: Environment:",{typeof_window:typeof window,typeof_document:typeof document,location:typeof window<"u"?window.location.href:"no window"});const l=i(null);l.subscribe(e=>{console.log("üîß MusicPlayer Store: State changed:",{hasPlayer:!!e,playerMethods:e?Object.keys(e).filter(o=>typeof e[o]=="function"):[],timestamp:new Date().toISOString()})});console.log("üîß MusicPlayer Store: musicPlayerStore created");const n=e=>{if(console.log("üéµ Store: playTrack called with:",e),console.log("üéµ Store: Track details:",{title:e==null?void 0:e.title,artist:e==null?void 0:e.artist,stream_url:e==null?void 0:e.stream_url,hasAllRequired:!!(e!=null&&e.title&&(e!=null&&e.artist)&&(e!=null&&e.stream_url))}),!e){console.error("‚ùå Store: playTrack called with null/undefined track");return}l.update(o=>{if(console.log("üéµ Store: Current player state:",{hasPlayer:!!o,hasPlayMethod:!!(o!=null&&o.playTrackFromParent),playerType:typeof o,playerMethods:o?Object.keys(o).filter(s=>typeof o[s]=="function"):[]}),o&&o.playTrackFromParent){console.log("‚úÖ Store: Music player available, calling playTrackFromParent");try{o.playTrackFromParent(e),console.log("‚úÖ Store: playTrackFromParent completed successfully")}catch(s){console.error("‚ùå Store: Error in playTrackFromParent:",s)}}else console.warn("‚ö†Ô∏è Store: Music player not available for playTrack"),console.warn("‚ö†Ô∏è Store: Player details:",{player:o,hasPlayMethod:!!(o!=null&&o.playTrackFromParent),playerKeys:o?Object.keys(o):[]});return o})},d=e=>{if(console.log("üìù Store: addToQueue called with:",e),console.log("üìù Store: Track details:",{title:e==null?void 0:e.title,artist:e==null?void 0:e.artist,stream_url:e==null?void 0:e.stream_url,hasAllRequired:!!(e!=null&&e.title&&(e!=null&&e.artist)&&(e!=null&&e.stream_url))}),!e){console.error("‚ùå Store: addToQueue called with null/undefined track");return}l.update(o=>{if(console.log("üìù Store: Current player state:",{hasPlayer:!!o,hasAddMethod:!!(o!=null&&o.addTrackToQueue),playerType:typeof o,playerMethods:o?Object.keys(o).filter(s=>typeof o[s]=="function"):[]}),o&&o.addTrackToQueue){console.log("‚úÖ Store: Music player available, calling addTrackToQueue");try{o.addTrackToQueue(e),console.log("‚úÖ Store: addTrackToQueue completed successfully")}catch(s){console.error("‚ùå Store: Error in addTrackToQueue:",s)}}else console.warn("‚ö†Ô∏è Store: Music player not available for addToQueue"),console.warn("‚ö†Ô∏è Store: Player details:",{player:o,hasAddMethod:!!(o!=null&&o.addTrackToQueue),playerKeys:o?Object.keys(o):[]});return o})},r=(e,o=0)=>{if(console.log("üéº Store: setQueue called with",(e==null?void 0:e.length)||0,"tracks, startIndex:",o),console.log("üéº Store: Tracks details:",{isArray:Array.isArray(e),length:(e==null?void 0:e.length)||0,firstTrack:e!=null&&e[0]?{title:e[0].title,artist:e[0].artist,stream_url:e[0].stream_url}:null}),!e||!Array.isArray(e)||e.length===0){console.error("‚ùå Store: setQueue called with invalid tracks:",e);return}l.update(s=>{if(console.log("üéº Store: Current player state:",{hasPlayer:!!s,hasSetQueueMethod:!!(s!=null&&s.setQueue),playerType:typeof s,playerMethods:s?Object.keys(s).filter(u=>typeof s[u]=="function"):[]}),s&&s.setQueue){console.log("‚úÖ Store: Music player available, calling setQueue");try{s.setQueue(e,o),console.log("‚úÖ Store: setQueue completed successfully")}catch(u){console.error("‚ùå Store: Error in setQueue:",u)}}else console.warn("‚ö†Ô∏è Store: Music player not available for setQueue"),console.warn("‚ö†Ô∏è Store: Player details:",{player:s,hasSetQueueMethod:!!(s!=null&&s.setQueue),playerKeys:s?Object.keys(s):[]});return s})},c=()=>{let e=!1;return l.subscribe(s=>{e=s!==null,console.log("üîç Store: isPlayerAvailable check:",{available:e,hasPlayer:!!s,playerType:typeof s})})(),e},t={playTrack:n,addToQueue:d,setQueue:r,isPlayerAvailable:c};typeof window<"u"&&(window.musicPlayerActionsDebug={actions:t,store:l,testActions:()=>{console.log("üß™ Store: Testing actions availability:",{playTrack:typeof t.playTrack,addToQueue:typeof t.addToQueue,setQueue:typeof t.setQueue,isPlayerAvailable:typeof t.isPlayerAvailable});try{l.subscribe(o=>{console.log("üß™ Store: Test subscription successful, player:",!!o)})()}catch(e){console.error("üß™ Store: Test subscription failed:",e)}}},setTimeout(()=>{window.musicPlayerActionsDebug.testActions()},1e3));const f=e=>{console.log("üîó Store: setMusicPlayer called with player instance:",e),console.log("üîó Store: Player instance details:",{hasInstance:!!e,instanceType:typeof e,availableMethods:e?Object.keys(e).filter(s=>typeof e[s]=="function"):[],hasRequiredMethods:!!(e!=null&&e.playTrackFromParent&&(e!=null&&e.addTrackToQueue)&&(e!=null&&e.setQueue))}),e||console.warn("‚ö†Ô∏è Store: setMusicPlayer called with null/undefined instance"),l.set(e),console.log("‚úÖ Store: Music player instance set in store"),l.subscribe(s=>{console.log("üîó Store: Store updated, new state:",{hasPlayer:!!s,isInstanceSet:s===e})})()};console.log("üîß MusicPlayer Store: musicPlayerActions created with methods:",Object.keys(t));console.log("üîß MusicPlayer Store: All exports ready");console.log("üîß MusicPlayer Store: Export validation:",{musicPlayerActions:!!t,musicPlayerStore:!!l,setMusicPlayer:!!f,actionsType:typeof t,methodsAvailable:Object.keys(t).map(e=>({name:e,type:typeof t[e]}))});export{l as a,S as e,t as m,f as s};
