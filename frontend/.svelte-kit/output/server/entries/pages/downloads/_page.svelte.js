import { c as create_ssr_component, o as onDestroy } from "../../../chunks/ssr.js";
const css = {
  code: ".downloads-page.svelte-gbx47t.svelte-gbx47t{opacity:0;transition:opacity 0.5s ease-in-out;max-width:1200px;margin:0 auto;padding:20px;min-height:100vh}.downloads-page.loaded.svelte-gbx47t.svelte-gbx47t{opacity:1}.page-header.svelte-gbx47t.svelte-gbx47t{text-align:center;margin-bottom:40px}.page-header.svelte-gbx47t h1.svelte-gbx47t{font-size:2.5rem;font-weight:bold;background:linear-gradient(45deg, #ff00ff, #00ffff);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;margin-bottom:10px}.page-header.svelte-gbx47t p.svelte-gbx47t{color:rgba(255, 255, 255, 0.7);font-size:1.1rem}.loading.svelte-gbx47t.svelte-gbx47t{text-align:center;padding:60px 20px}.spinner.svelte-gbx47t.svelte-gbx47t{width:40px;height:40px;border:4px solid rgba(255, 255, 255, 0.1);border-left:4px solid #00ffff;border-radius:50%;animation:svelte-gbx47t-spin 1s linear infinite;margin:0 auto 20px}@keyframes svelte-gbx47t-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.error.svelte-gbx47t.svelte-gbx47t{text-align:center;padding:40px 20px;background:rgba(220, 20, 60, 0.1);border:1px solid #dc143c;border-radius:12px;margin:20px 0}.retry-btn.svelte-gbx47t.svelte-gbx47t{background:rgba(0, 191, 255, 0.1);border:1px solid #00bfff;color:#00bfff;padding:10px 20px;border-radius:8px;cursor:pointer;transition:all 0.3s ease;margin-top:15px}.retry-btn.svelte-gbx47t.svelte-gbx47t:hover{background:rgba(0, 191, 255, 0.2);transform:translateY(-1px)}.stats-section.svelte-gbx47t.svelte-gbx47t{margin-bottom:40px}.stats-section.svelte-gbx47t h2.svelte-gbx47t{color:#ff00ff;margin-bottom:20px;font-size:1.8rem}.stats-grid.svelte-gbx47t.svelte-gbx47t{display:grid;grid-template-columns:repeat(auto-fit, minmax(150px, 1fr));gap:20px;margin-bottom:20px}.stat-card.svelte-gbx47t.svelte-gbx47t{background:rgba(255, 255, 255, 0.05);border:1px solid rgba(255, 255, 255, 0.1);border-radius:12px;padding:20px;text-align:center;transition:all 0.3s ease}.stat-card.svelte-gbx47t.svelte-gbx47t:hover{transform:translateY(-2px);border-color:#00ffff;box-shadow:0 5px 20px rgba(0, 255, 255, 0.1)}.stat-value.svelte-gbx47t.svelte-gbx47t{font-size:2rem;font-weight:bold;color:#00ffff;margin-bottom:5px}.stat-label.svelte-gbx47t.svelte-gbx47t{color:rgba(255, 255, 255, 0.7);font-size:0.9rem}.active-section.svelte-gbx47t h2.svelte-gbx47t{color:#00ffff;margin-bottom:20px;font-size:1.8rem}.no-downloads.svelte-gbx47t.svelte-gbx47t{text-align:center;padding:60px 20px;background:rgba(255, 255, 255, 0.02);border:1px solid rgba(255, 255, 255, 0.1);border-radius:12px}.no-downloads-icon.svelte-gbx47t.svelte-gbx47t{font-size:4rem;margin-bottom:20px}.no-downloads.svelte-gbx47t h3.svelte-gbx47t{color:rgba(255, 255, 255, 0.8);margin-bottom:10px}.no-downloads.svelte-gbx47t p.svelte-gbx47t{color:rgba(255, 255, 255, 0.6);margin-bottom:20px}.search-link.svelte-gbx47t.svelte-gbx47t{display:inline-block;background:rgba(0, 191, 255, 0.1);border:1px solid #00bfff;color:#00bfff;padding:12px 24px;border-radius:8px;text-decoration:none;transition:all 0.3s ease}.search-link.svelte-gbx47t.svelte-gbx47t:hover{background:rgba(0, 191, 255, 0.2);transform:translateY(-1px)}.downloads-list.svelte-gbx47t.svelte-gbx47t{display:flex;flex-direction:column;gap:20px}.download-item.svelte-gbx47t.svelte-gbx47t{background:rgba(255, 255, 255, 0.05);border:1px solid rgba(255, 255, 255, 0.1);border-radius:12px;padding:20px;transition:all 0.3s ease}.download-item.svelte-gbx47t.svelte-gbx47t:hover{border-color:rgba(0, 255, 255, 0.3);box-shadow:0 5px 20px rgba(0, 255, 255, 0.1)}.download-header.svelte-gbx47t.svelte-gbx47t{display:flex;justify-content:space-between;align-items:flex-start;margin-bottom:15px}.download-name.svelte-gbx47t h4.svelte-gbx47t{color:#ffffff;margin:0 0 8px 0;font-size:1.1rem}.download-meta.svelte-gbx47t.svelte-gbx47t{display:flex;gap:15px;font-size:0.9rem}.download-size.svelte-gbx47t.svelte-gbx47t{color:rgba(255, 255, 255, 0.7)}.download-status.svelte-gbx47t.svelte-gbx47t{font-weight:bold}.download-controls.svelte-gbx47t.svelte-gbx47t{display:flex;gap:8px}.control-btn.svelte-gbx47t.svelte-gbx47t{background:rgba(255, 255, 255, 0.1);border:1px solid rgba(255, 255, 255, 0.2);color:#ffffff;padding:6px 10px;border-radius:6px;cursor:pointer;transition:all 0.3s ease;font-size:14px}.control-btn.svelte-gbx47t.svelte-gbx47t:hover{background:rgba(255, 255, 255, 0.2);transform:translateY(-1px)}.pause-btn.svelte-gbx47t.svelte-gbx47t:hover{border-color:#ffd700;color:#ffd700}.resume-btn.svelte-gbx47t.svelte-gbx47t:hover{border-color:#32cd32;color:#32cd32}.cancel-btn.svelte-gbx47t.svelte-gbx47t:hover{border-color:#dc143c;color:#dc143c}.progress-section.svelte-gbx47t.svelte-gbx47t{display:flex;align-items:center;gap:15px;margin-bottom:15px}.progress-bar.svelte-gbx47t.svelte-gbx47t{flex:1;height:8px;background:rgba(255, 255, 255, 0.1);border-radius:4px;overflow:hidden}.progress-fill.svelte-gbx47t.svelte-gbx47t{height:100%;transition:width 0.3s ease;border-radius:4px}.progress-text.svelte-gbx47t.svelte-gbx47t{color:#ffffff;font-weight:bold;font-size:0.9rem;min-width:50px;text-align:right}.download-details.svelte-gbx47t.svelte-gbx47t{display:grid;grid-template-columns:repeat(auto-fit, minmax(200px, 1fr));gap:10px;font-size:0.9rem}.detail-row.svelte-gbx47t.svelte-gbx47t{display:flex;justify-content:space-between;color:rgba(255, 255, 255, 0.8)}.detail-row.svelte-gbx47t span.svelte-gbx47t:first-child{color:rgba(255, 255, 255, 0.6)}@media(max-width: 768px){.downloads-page.svelte-gbx47t.svelte-gbx47t{padding:15px}.page-header.svelte-gbx47t h1.svelte-gbx47t{font-size:2rem}.stats-grid.svelte-gbx47t.svelte-gbx47t{grid-template-columns:repeat(auto-fit, minmax(120px, 1fr));gap:15px}.download-header.svelte-gbx47t.svelte-gbx47t{flex-direction:column;gap:15px}.download-details.svelte-gbx47t.svelte-gbx47t{grid-template-columns:1fr}}",
  map: '{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n    import { onMount, onDestroy } from \\"svelte\\";\\n\\n    // Component state\\n    let mounted = false;\\n    let downloadStats = null;\\n    let activeDownloads = [];\\n    let isLoading = true;\\n    let error = null;\\n    let updateInterval = null;\\n\\n    onMount(() => {\\n        mounted = true;\\n        loadDownloadData();\\n        // Start auto-refresh every 3 seconds\\n        updateInterval = setInterval(loadDownloadData, 3000);\\n    });\\n\\n    onDestroy(() => {\\n        if (updateInterval) {\\n            clearInterval(updateInterval);\\n        }\\n    });\\n\\n    // Load download statistics and active downloads\\n    async function loadDownloadData() {\\n        try {\\n            // Load stats and active downloads in parallel\\n            const [statsResponse, activeResponse] = await Promise.all([\\n                fetch(\\"/api/v1/download/stats\\"),\\n                fetch(\\"/api/v1/download/active\\"),\\n            ]);\\n\\n            if (statsResponse.ok) {\\n                const statsData = await statsResponse.json();\\n                if (statsData.success) {\\n                    downloadStats = statsData.stats;\\n                }\\n            }\\n\\n            if (activeResponse.ok) {\\n                const activeData = await activeResponse.json();\\n                if (activeData.success) {\\n                    activeDownloads = activeData.downloads || [];\\n                }\\n            }\\n\\n            error = null;\\n        } catch (err) {\\n            console.error(\\"Failed to load download data:\\", err);\\n            error = \\"Failed to load download information\\";\\n        } finally {\\n            isLoading = false;\\n        }\\n    }\\n\\n    // Pause a download\\n    async function pauseDownload(download) {\\n        try {\\n            const response = await fetch(\\n                `/api/v1/download/pause/${download.torrent_hash}`,\\n                {\\n                    method: \\"POST\\",\\n                },\\n            );\\n            const data = await response.json();\\n\\n            if (data.success) {\\n                console.log(\\"Download paused successfully\\");\\n                await loadDownloadData(); // Refresh data\\n            } else {\\n                console.error(\\"Failed to pause download:\\", data.error);\\n            }\\n        } catch (error) {\\n            console.error(\\"Error pausing download:\\", error);\\n        }\\n    }\\n\\n    // Resume a download\\n    async function resumeDownload(download) {\\n        try {\\n            const response = await fetch(\\n                `/api/v1/download/resume/${download.torrent_hash}`,\\n                {\\n                    method: \\"POST\\",\\n                },\\n            );\\n            const data = await response.json();\\n\\n            if (data.success) {\\n                console.log(\\"Download resumed successfully\\");\\n                await loadDownloadData(); // Refresh data\\n            } else {\\n                console.error(\\"Failed to resume download:\\", data.error);\\n            }\\n        } catch (error) {\\n            console.error(\\"Error resuming download:\\", error);\\n        }\\n    }\\n\\n    // Cancel a download\\n    async function cancelDownload(download) {\\n        if (\\n            !confirm(\\n                `Are you sure you want to cancel the download of \\"${download.name}\\"?`,\\n            )\\n        ) {\\n            return;\\n        }\\n\\n        try {\\n            const response = await fetch(\\n                `/api/v1/download/cancel/${download.torrent_hash}`,\\n                {\\n                    method: \\"POST\\",\\n                },\\n            );\\n            const data = await response.json();\\n\\n            if (data.success) {\\n                console.log(\\"Download cancelled successfully\\");\\n                await loadDownloadData(); // Refresh data\\n            } else {\\n                console.error(\\"Failed to cancel download:\\", data.error);\\n            }\\n        } catch (error) {\\n            console.error(\\"Error cancelling download:\\", error);\\n        }\\n    }\\n\\n    // Format bytes to human readable format\\n    function formatBytes(bytes) {\\n        if (bytes === 0) return \\"0 B\\";\\n        const k = 1024;\\n        const sizes = [\\"B\\", \\"KB\\", \\"MB\\", \\"GB\\", \\"TB\\"];\\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \\" \\" + sizes[i];\\n    }\\n\\n    // Format speed\\n    function formatSpeed(bytesPerSecond) {\\n        return formatBytes(bytesPerSecond) + \\"/s\\";\\n    }\\n\\n    // Format time (seconds to human readable)\\n    function formatTime(seconds) {\\n        if (seconds < 0 || !isFinite(seconds)) return \\"Unknown\\";\\n        if (seconds < 60) return `${Math.round(seconds)}s`;\\n        if (seconds < 3600) return `${Math.round(seconds / 60)}m`;\\n        return `${Math.round(seconds / 3600)}h`;\\n    }\\n\\n    // Get status color\\n    function getStatusColor(status) {\\n        switch (status.toLowerCase()) {\\n            case \\"downloading\\":\\n                return \\"#ffa500\\";\\n            case \\"seeding\\":\\n                return \\"#32cd32\\";\\n            case \\"paused\\":\\n                return \\"#ffd700\\";\\n            case \\"completed\\":\\n                return \\"#32cd32\\";\\n            case \\"error\\":\\n                return \\"#dc143c\\";\\n            default:\\n                return \\"#00bfff\\";\\n        }\\n    }\\n<\/script>\\n\\n<svelte:head>\\n    <title>Downloads - StepheyBot Music</title>\\n</svelte:head>\\n\\n<div class=\\"downloads-page\\" class:loaded={mounted}>\\n    <div class=\\"page-header\\">\\n        <h1>🎵 Downloads</h1>\\n        <p>Monitor and manage your music downloads</p>\\n    </div>\\n\\n    {#if isLoading}\\n        <div class=\\"loading\\">\\n            <div class=\\"spinner\\"></div>\\n            <p>Loading download information...</p>\\n        </div>\\n    {:else if error}\\n        <div class=\\"error\\">\\n            <h3>⚠️ Error</h3>\\n            <p>{error}</p>\\n            <button class=\\"retry-btn\\" on:click={loadDownloadData}>\\n                🔄 Retry\\n            </button>\\n        </div>\\n    {:else}\\n        <!-- Download Statistics -->\\n        {#if downloadStats}\\n            <div class=\\"stats-section\\">\\n                <h2>📊 Download Statistics</h2>\\n                <div class=\\"stats-grid\\">\\n                    <div class=\\"stat-card\\">\\n                        <div class=\\"stat-value\\">{downloadStats.total_downloads}</div>\\n                        <div class=\\"stat-label\\">Total Downloads</div>\\n                    </div>\\n                    <div class=\\"stat-card\\">\\n                        <div class=\\"stat-value\\">{downloadStats.active_downloads}</div>\\n                        <div class=\\"stat-label\\">Active</div>\\n                    </div>\\n                    <div class=\\"stat-card\\">\\n                        <div class=\\"stat-value\\">{downloadStats.completed_downloads}</div>\\n                        <div class=\\"stat-label\\">Completed</div>\\n                    </div>\\n                    <div class=\\"stat-card\\">\\n                        <div class=\\"stat-value\\">{downloadStats.queued_downloads}</div>\\n                        <div class=\\"stat-label\\">Queued</div>\\n                    </div>\\n                    <div class=\\"stat-card\\">\\n                        <div class=\\"stat-value\\">{downloadStats.failed_downloads}</div>\\n                        <div class=\\"stat-label\\">Failed</div>\\n                    </div>\\n                    <div class=\\"stat-card\\">\\n                        <div class=\\"stat-value\\">\\n                            {formatBytes(downloadStats.total_downloaded_bytes)}\\n                        </div>\\n                        <div class=\\"stat-label\\">Downloaded</div>\\n                    </div>\\n                </div>\\n            </div>\\n        {/if}\\n\\n        <!-- Active Downloads -->\\n        <div class=\\"active-section\\">\\n            <h2>⬇️ Active Downloads</h2>\\n\\n            {#if activeDownloads.length === 0}\\n                <div class=\\"no-downloads\\">\\n                    <div class=\\"no-downloads-icon\\">📭</div>\\n                    <h3>No Active Downloads</h3>\\n                    <p>Your downloads will appear here when you start downloading music.</p>\\n                    <a href=\\"/search\\" class=\\"search-link\\">🔍 Search for Music</a>\\n                </div>\\n            {:else}\\n                <div class=\\"downloads-list\\">\\n                    {#each activeDownloads as download}\\n                        <div class=\\"download-item\\">\\n                            <div class=\\"download-header\\">\\n                                <div class=\\"download-name\\">\\n                                    <h4>{download.name}</h4>\\n                                    <div class=\\"download-meta\\">\\n                                        <span class=\\"download-size\\">{formatBytes(download.size)}</span>\\n                                        <span class=\\"download-status\\" style=\\"color: {getStatusColor(download.status)}\\">\\n                                            {download.status.toUpperCase()}\\n                                        </span>\\n                                    </div>\\n                                </div>\\n                                <div class=\\"download-controls\\">\\n                                    {#if download.status === \\"downloading\\"}\\n                                        <button\\n                                            class=\\"control-btn pause-btn\\"\\n                                            on:click={() => pauseDownload(download)}\\n                                            title=\\"Pause Download\\"\\n                                        >\\n                                            ⏸️\\n                                        </button>\\n                                    {:else if download.status === \\"paused\\"}\\n                                        <button\\n                                            class=\\"control-btn resume-btn\\"\\n                                            on:click={() => resumeDownload(download)}\\n                                            title=\\"Resume Download\\"\\n                                        >\\n                                            ▶️\\n                                        </button>\\n                                    {/if}\\n                                    <button\\n                                        class=\\"control-btn cancel-btn\\"\\n                                        on:click={() => cancelDownload(download)}\\n                                        title=\\"Cancel Download\\"\\n                                    >\\n                                        ❌\\n                                    </button>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\"progress-section\\">\\n                                <div class=\\"progress-bar\\">\\n                                    <div\\n                                        class=\\"progress-fill\\"\\n                                        style=\\"width: {download.progress * 100}%; background-color: {getStatusColor(download.status)}\\"\\n                                    ></div>\\n                                </div>\\n                                <div class=\\"progress-text\\">\\n                                    {Math.round(download.progress * 100)}%\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\"download-details\\">\\n                                <div class=\\"detail-row\\">\\n                                    <span>Downloaded:</span>\\n                                    <span>{formatBytes(download.downloaded)} of {formatBytes(download.size)}</span>\\n                                </div>\\n                                <div class=\\"detail-row\\">\\n                                    <span>Speed:</span>\\n                                    <span>↓ {formatSpeed(download.download_speed)} ↑ {formatSpeed(download.upload_speed)}</span>\\n                                </div>\\n                                <div class=\\"detail-row\\">\\n                                    <span>Peers:</span>\\n                                    <span>{download.seeds} seeds, {download.peers} peers</span>\\n                                </div>\\n                                {#if download.eta > 0}\\n                                    <div class=\\"detail-row\\">\\n                                        <span>ETA:</span>\\n                                        <span>{formatTime(download.eta)}</span>\\n                                    </div>\\n                                {/if}\\n                            </div>\\n                        </div>\\n                    {/each}\\n                </div>\\n            {/if}\\n        </div>\\n    {/if}\\n</div>\\n\\n<style>\\n    .downloads-page {\\n        opacity: 0;\\n        transition: opacity 0.5s ease-in-out;\\n        max-width: 1200px;\\n        margin: 0 auto;\\n        padding: 20px;\\n        min-height: 100vh;\\n    }\\n\\n    .downloads-page.loaded {\\n        opacity: 1;\\n    }\\n\\n    .page-header {\\n        text-align: center;\\n        margin-bottom: 40px;\\n    }\\n\\n    .page-header h1 {\\n        font-size: 2.5rem;\\n        font-weight: bold;\\n        background: linear-gradient(45deg, #ff00ff, #00ffff);\\n        -webkit-background-clip: text;\\n        background-clip: text;\\n        -webkit-text-fill-color: transparent;\\n        margin-bottom: 10px;\\n    }\\n\\n    .page-header p {\\n        color: rgba(255, 255, 255, 0.7);\\n        font-size: 1.1rem;\\n    }\\n\\n    .loading {\\n        text-align: center;\\n        padding: 60px 20px;\\n    }\\n\\n    .spinner {\\n        width: 40px;\\n        height: 40px;\\n        border: 4px solid rgba(255, 255, 255, 0.1);\\n        border-left: 4px solid #00ffff;\\n        border-radius: 50%;\\n        animation: spin 1s linear infinite;\\n        margin: 0 auto 20px;\\n    }\\n\\n    @keyframes spin {\\n        0% { transform: rotate(0deg); }\\n        100% { transform: rotate(360deg); }\\n    }\\n\\n    .error {\\n        text-align: center;\\n        padding: 40px 20px;\\n        background: rgba(220, 20, 60, 0.1);\\n        border: 1px solid #dc143c;\\n        border-radius: 12px;\\n        margin: 20px 0;\\n    }\\n\\n    .retry-btn {\\n        background: rgba(0, 191, 255, 0.1);\\n        border: 1px solid #00bfff;\\n        color: #00bfff;\\n        padding: 10px 20px;\\n        border-radius: 8px;\\n        cursor: pointer;\\n        transition: all 0.3s ease;\\n        margin-top: 15px;\\n    }\\n\\n    .retry-btn:hover {\\n        background: rgba(0, 191, 255, 0.2);\\n        transform: translateY(-1px);\\n    }\\n\\n    .stats-section {\\n        margin-bottom: 40px;\\n    }\\n\\n    .stats-section h2 {\\n        color: #ff00ff;\\n        margin-bottom: 20px;\\n        font-size: 1.8rem;\\n    }\\n\\n    .stats-grid {\\n        display: grid;\\n        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n        gap: 20px;\\n        margin-bottom: 20px;\\n    }\\n\\n    .stat-card {\\n        background: rgba(255, 255, 255, 0.05);\\n        border: 1px solid rgba(255, 255, 255, 0.1);\\n        border-radius: 12px;\\n        padding: 20px;\\n        text-align: center;\\n        transition: all 0.3s ease;\\n    }\\n\\n    .stat-card:hover {\\n        transform: translateY(-2px);\\n        border-color: #00ffff;\\n        box-shadow: 0 5px 20px rgba(0, 255, 255, 0.1);\\n    }\\n\\n    .stat-value {\\n        font-size: 2rem;\\n        font-weight: bold;\\n        color: #00ffff;\\n        margin-bottom: 5px;\\n    }\\n\\n    .stat-label {\\n        color: rgba(255, 255, 255, 0.7);\\n        font-size: 0.9rem;\\n    }\\n\\n    .active-section h2 {\\n        color: #00ffff;\\n        margin-bottom: 20px;\\n        font-size: 1.8rem;\\n    }\\n\\n    .no-downloads {\\n        text-align: center;\\n        padding: 60px 20px;\\n        background: rgba(255, 255, 255, 0.02);\\n        border: 1px solid rgba(255, 255, 255, 0.1);\\n        border-radius: 12px;\\n    }\\n\\n    .no-downloads-icon {\\n        font-size: 4rem;\\n        margin-bottom: 20px;\\n    }\\n\\n    .no-downloads h3 {\\n        color: rgba(255, 255, 255, 0.8);\\n        margin-bottom: 10px;\\n    }\\n\\n    .no-downloads p {\\n        color: rgba(255, 255, 255, 0.6);\\n        margin-bottom: 20px;\\n    }\\n\\n    .search-link {\\n        display: inline-block;\\n        background: rgba(0, 191, 255, 0.1);\\n        border: 1px solid #00bfff;\\n        color: #00bfff;\\n        padding: 12px 24px;\\n        border-radius: 8px;\\n        text-decoration: none;\\n        transition: all 0.3s ease;\\n    }\\n\\n    .search-link:hover {\\n        background: rgba(0, 191, 255, 0.2);\\n        transform: translateY(-1px);\\n    }\\n\\n    .downloads-list {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 20px;\\n    }\\n\\n    .download-item {\\n        background: rgba(255, 255, 255, 0.05);\\n        border: 1px solid rgba(255, 255, 255, 0.1);\\n        border-radius: 12px;\\n        padding: 20px;\\n        transition: all 0.3s ease;\\n    }\\n\\n    .download-item:hover {\\n        border-color: rgba(0, 255, 255, 0.3);\\n        box-shadow: 0 5px 20px rgba(0, 255, 255, 0.1);\\n    }\\n\\n    .download-header {\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: flex-start;\\n        margin-bottom: 15px;\\n    }\\n\\n    .download-name h4 {\\n        color: #ffffff;\\n        margin: 0 0 8px 0;\\n        font-size: 1.1rem;\\n    }\\n\\n    .download-meta {\\n        display: flex;\\n        gap: 15px;\\n        font-size: 0.9rem;\\n    }\\n\\n    .download-size {\\n        color: rgba(255, 255, 255, 0.7);\\n    }\\n\\n    .download-status {\\n        font-weight: bold;\\n    }\\n\\n    .download-controls {\\n        display: flex;\\n        gap: 8px;\\n    }\\n\\n    .control-btn {\\n        background: rgba(255, 255, 255, 0.1);\\n        border: 1px solid rgba(255, 255, 255, 0.2);\\n        color: #ffffff;\\n        padding: 6px 10px;\\n        border-radius: 6px;\\n        cursor: pointer;\\n        transition: all 0.3s ease;\\n        font-size: 14px;\\n    }\\n\\n    .control-btn:hover {\\n        background: rgba(255, 255, 255, 0.2);\\n        transform: translateY(-1px);\\n    }\\n\\n    .pause-btn:hover {\\n        border-color: #ffd700;\\n        color: #ffd700;\\n    }\\n\\n    .resume-btn:hover {\\n        border-color: #32cd32;\\n        color: #32cd32;\\n    }\\n\\n    .cancel-btn:hover {\\n        border-color: #dc143c;\\n        color: #dc143c;\\n    }\\n\\n    .progress-section {\\n        display: flex;\\n        align-items: center;\\n        gap: 15px;\\n        margin-bottom: 15px;\\n    }\\n\\n    .progress-bar {\\n        flex: 1;\\n        height: 8px;\\n        background: rgba(255, 255, 255, 0.1);\\n        border-radius: 4px;\\n        overflow: hidden;\\n    }\\n\\n    .progress-fill {\\n        height: 100%;\\n        transition: width 0.3s ease;\\n        border-radius: 4px;\\n    }\\n\\n    .progress-text {\\n        color: #ffffff;\\n        font-weight: bold;\\n        font-size: 0.9rem;\\n        min-width: 50px;\\n        text-align: right;\\n    }\\n\\n    .download-details {\\n        display: grid;\\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\\n        gap: 10px;\\n        font-size: 0.9rem;\\n    }\\n\\n    .detail-row {\\n        display: flex;\\n        justify-content: space-between;\\n        color: rgba(255, 255, 255, 0.8);\\n    }\\n\\n    .detail-row span:first-child {\\n        color: rgba(255, 255, 255, 0.6);\\n    }\\n\\n    @media (max-width: 768px) {\\n        .downloads-page {\\n            padding: 15px;\\n        }\\n\\n        .page-header h1 {\\n            font-size: 2rem;\\n        }\\n\\n        .stats-grid {\\n            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\\n            gap: 15px;\\n        }\\n\\n        .download-header {\\n            flex-direction: column;\\n            gap: 15px;\\n        }\\n\\n        .download-details {\\n            grid-template-columns: 1fr;\\n        }\\n    }\\n</style>\\n"],"names":[],"mappings":"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"}'
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  onDestroy(() => {
  });
  $$result.css.add(css);
  return `${$$result.head += `<!-- HEAD_svelte-jsreu1_START -->${$$result.title = `<title>Downloads - StepheyBot Music</title>`, ""}<!-- HEAD_svelte-jsreu1_END -->`, ""} <div class="${["downloads-page svelte-gbx47t", ""].join(" ").trim()}"><div class="page-header svelte-gbx47t" data-svelte-h="svelte-1hnc9e5"><h1 class="svelte-gbx47t">🎵 Downloads</h1> <p class="svelte-gbx47t">Monitor and manage your music downloads</p></div> ${`<div class="loading svelte-gbx47t" data-svelte-h="svelte-1puz06r"><div class="spinner svelte-gbx47t"></div> <p>Loading download information...</p></div>`} </div>`;
});
export {
  Page as default
};
