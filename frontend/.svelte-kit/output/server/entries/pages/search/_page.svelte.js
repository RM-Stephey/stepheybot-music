import { c as create_ssr_component, a as add_attribute, e as escape, d as each, v as validate_component } from "../../../chunks/ssr.js";
import "../../../chunks/musicPlayer.js";
const css$1 = {
  code: '.global-search.svelte-7n2d85.svelte-7n2d85{opacity:0;transition:opacity 0.5s ease-in-out;max-width:1200px;margin:0 auto;padding:20px}.global-search.loaded.svelte-7n2d85.svelte-7n2d85{opacity:1}.search-header.svelte-7n2d85.svelte-7n2d85{text-align:center;margin-bottom:30px}.search-title.svelte-7n2d85.svelte-7n2d85{font-size:2.5rem;font-weight:bold;background:linear-gradient(135deg, #ff6b9d, #00ffff);-webkit-background-clip:text;-webkit-text-fill-color:transparent;margin-bottom:10px;display:flex;align-items:center;justify-content:center;gap:15px}.title-icon.svelte-7n2d85.svelte-7n2d85{font-size:2rem}.search-subtitle.svelte-7n2d85.svelte-7n2d85{color:#ccc;font-size:1.1rem;margin-bottom:20px}.search-controls.svelte-7n2d85.svelte-7n2d85{margin-bottom:30px}.search-input-container.svelte-7n2d85.svelte-7n2d85{margin-bottom:20px;display:flex;gap:12px;align-items:stretch}.search-input-wrapper.svelte-7n2d85.svelte-7n2d85{position:relative;width:100%;max-width:600px;flex:1}.search-input.svelte-7n2d85.svelte-7n2d85{width:100%;padding:15px 50px 15px 20px;background:rgba(20, 20, 30, 0.8);border:2px solid rgba(0, 255, 255, 0.3);border-radius:25px;color:#fff;font-size:1.1rem;transition:all 0.3s ease}.search-input.svelte-7n2d85.svelte-7n2d85:focus{outline:none;border-color:#00ffff;box-shadow:0 0 20px rgba(0, 255, 255, 0.3)}.search-input.svelte-7n2d85.svelte-7n2d85::placeholder{color:#888}.search-icon.svelte-7n2d85.svelte-7n2d85{position:absolute;right:15px;top:50%;transform:translateY(-50%);color:#00ffff;font-size:1.2rem}.clear-search-btn.svelte-7n2d85.svelte-7n2d85{position:absolute;right:45px;top:50%;transform:translateY(-50%);background:none;border:none;color:#ff6b9d;font-size:1.2rem;cursor:pointer;padding:5px;border-radius:50%;transition:all 0.2s ease}.clear-search-btn.svelte-7n2d85.svelte-7n2d85:hover{background:rgba(255, 107, 157, 0.2)}.search-submit-btn.svelte-7n2d85.svelte-7n2d85{background:linear-gradient(135deg, #ff6b9d, #00ffff);color:white;border:none;padding:12px 24px;border-radius:12px;font-weight:600;cursor:pointer;transition:all 0.3s ease;white-space:nowrap;min-width:100px;height:48px;display:flex;align-items:center;justify-content:center}.search-submit-btn.svelte-7n2d85.svelte-7n2d85:hover:not(:disabled){transform:translateY(-2px);box-shadow:0 8px 25px rgba(0, 255, 255, 0.3)}.search-submit-btn.svelte-7n2d85.svelte-7n2d85:disabled{opacity:0.5;cursor:not-allowed;transform:none}.search-loading.svelte-7n2d85.svelte-7n2d85{position:absolute;right:80px;top:50%;transform:translateY(-50%)}.loading-spinner.svelte-7n2d85.svelte-7n2d85{width:20px;height:20px;border:2px solid rgba(0, 255, 255, 0.3);border-top:2px solid #00ffff;border-radius:50%;animation:svelte-7n2d85-spin 1s linear infinite}@keyframes svelte-7n2d85-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.search-filters.svelte-7n2d85.svelte-7n2d85{display:flex;justify-content:center;gap:20px;flex-wrap:wrap}.filter-group.svelte-7n2d85.svelte-7n2d85{display:flex;align-items:center;gap:8px}.filter-label.svelte-7n2d85.svelte-7n2d85{color:#ccc;font-size:0.9rem;white-space:nowrap}.filter-select.svelte-7n2d85.svelte-7n2d85{background:rgba(20, 20, 30, 0.8);border:1px solid rgba(0, 255, 255, 0.3);border-radius:8px;color:#fff;padding:8px 12px;font-size:0.9rem;cursor:pointer;transition:all 0.3s ease}.filter-select.svelte-7n2d85.svelte-7n2d85:focus{outline:none;border-color:#00ffff}.results-header.svelte-7n2d85.svelte-7n2d85{display:flex;justify-content:space-between;align-items:center;margin-bottom:20px;flex-wrap:wrap;gap:15px}.results-header.svelte-7n2d85 h3.svelte-7n2d85{color:#fff;font-size:1.3rem;margin:0}.results-legend.svelte-7n2d85.svelte-7n2d85{display:flex;gap:15px;font-size:0.9rem;color:#ccc}.legend-item.svelte-7n2d85.svelte-7n2d85{display:flex;align-items:center;gap:5px}.results-grid.svelte-7n2d85.svelte-7n2d85{display:grid;grid-template-columns:repeat(auto-fill, minmax(400px, 1fr));gap:20px}.track-card.svelte-7n2d85.svelte-7n2d85{background:rgba(20, 20, 30, 0.9);border:1px solid rgba(255, 255, 255, 0.1);border-radius:12px;padding:20px;transition:all 0.3s ease;position:relative;overflow:hidden}.track-card.svelte-7n2d85.svelte-7n2d85::before{content:"";position:absolute;top:0;left:0;right:0;height:3px;background:linear-gradient(\n            90deg,\n            transparent,\n            rgba(0, 255, 255, 0.5),\n            transparent\n        );opacity:0;transition:opacity 0.3s ease}.track-card.svelte-7n2d85.svelte-7n2d85:hover{transform:translateY(-5px);box-shadow:0 10px 30px rgba(0, 0, 0, 0.3);border-color:rgba(0, 255, 255, 0.3)}.track-card.svelte-7n2d85.svelte-7n2d85:hover::before{opacity:1}.track-card.local.svelte-7n2d85.svelte-7n2d85{border-left:3px solid #00ff88}.track-card.external.svelte-7n2d85.svelte-7n2d85{border-left:3px solid #ff6b9d}.track-card.lidarr.svelte-7n2d85.svelte-7n2d85{border-left:3px solid #ffa500}.track-info.svelte-7n2d85.svelte-7n2d85{margin-bottom:15px}.track-title.svelte-7n2d85.svelte-7n2d85{font-size:1.2rem;font-weight:bold;color:#fff;margin-bottom:5px;line-height:1.3}.track-artist.svelte-7n2d85.svelte-7n2d85{font-size:1rem;color:#00ffff;margin-bottom:3px}.track-album.svelte-7n2d85.svelte-7n2d85{font-size:0.9rem;color:#ccc;margin-bottom:8px}.track-meta.svelte-7n2d85.svelte-7n2d85{display:flex;gap:10px;flex-wrap:wrap}.meta-item.svelte-7n2d85.svelte-7n2d85{font-size:0.8rem;color:#999;background:rgba(255, 255, 255, 0.1);padding:2px 8px;border-radius:12px}.meta-item.genre.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 107, 157, 0.2);color:#ff6b9d}.meta-item.quality.svelte-7n2d85.svelte-7n2d85{background:rgba(0, 255, 136, 0.2);color:#00ff88}.meta-item.size.svelte-7n2d85.svelte-7n2d85{background:rgba(0, 255, 255, 0.2);color:#00ffff}.meta-item.seeders.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 165, 0, 0.2);color:#ffa500}.meta-item.rating.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 215, 0, 0.2);color:#ffd700}.meta-item.country.svelte-7n2d85.svelte-7n2d85{background:rgba(135, 206, 235, 0.2);color:#87ceeb}.meta-item.type.svelte-7n2d85.svelte-7n2d85{background:rgba(147, 112, 219, 0.2);color:#9370db}.meta-item.aliases.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 182, 193, 0.2);color:#ffb6c1}.meta-item.isrcs.svelte-7n2d85.svelte-7n2d85{background:rgba(144, 238, 144, 0.2);color:#90ee90}.meta-item.score.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 99, 71, 0.2);color:#ff6347}.source-info.svelte-7n2d85.svelte-7n2d85{position:absolute;top:15px;right:15px;display:flex;flex-direction:column;align-items:flex-end;gap:5px}.source-badge.svelte-7n2d85.svelte-7n2d85{font-size:0.8rem;padding:4px 8px;border-radius:12px;font-weight:bold;text-transform:uppercase}.source-badge.local.svelte-7n2d85.svelte-7n2d85{background:rgba(0, 255, 136, 0.2);color:#00ff88;border:1px solid #00ff88}.source-badge.external.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 107, 157, 0.2);color:#ff6b9d;border:1px solid #ff6b9d}.source-badge.lidarr.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 165, 0, 0.2);color:#ffa500;border:1px solid #ffa500}.popularity.svelte-7n2d85.svelte-7n2d85{font-size:0.7rem;color:#999}.indexer.svelte-7n2d85.svelte-7n2d85{font-size:0.7rem;color:#ffa500;background:rgba(255, 165, 0, 0.1);padding:2px 6px;border-radius:8px;border:1px solid rgba(255, 165, 0, 0.3)}.track-actions.svelte-7n2d85.svelte-7n2d85{display:flex;gap:10px;flex-wrap:wrap}.action-btn.svelte-7n2d85.svelte-7n2d85{background:rgba(0, 255, 255, 0.1);border:1px solid #00ffff;color:#00ffff;padding:8px 12px;border-radius:8px;cursor:pointer;font-size:0.9rem;font-weight:bold;transition:all 0.2s ease;text-decoration:none;display:inline-flex;align-items:center;gap:5px}.action-btn.svelte-7n2d85.svelte-7n2d85:hover{background:rgba(0, 255, 255, 0.2);transform:translateY(-2px)}.action-btn.svelte-7n2d85.svelte-7n2d85:disabled{opacity:0.5;cursor:not-allowed;transform:none}.action-btn.play-btn.svelte-7n2d85.svelte-7n2d85{background:rgba(0, 255, 136, 0.1);border-color:#00ff88;color:#00ff88}.action-btn.play-btn.svelte-7n2d85.svelte-7n2d85:hover{background:rgba(0, 255, 136, 0.2)}.action-btn.queue-btn.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 107, 157, 0.1);border-color:#ff6b9d;color:#ff6b9d}.action-btn.queue-btn.svelte-7n2d85.svelte-7n2d85:hover{background:rgba(255, 107, 157, 0.2)}.action-btn.download-btn.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 165, 0, 0.1);border-color:#ffa500;color:#ffa500}.action-btn.download-btn.svelte-7n2d85.svelte-7n2d85:hover{background:rgba(255, 165, 0, 0.2)}.action-btn.requesting.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 255, 0, 0.1);border-color:#ffff00;color:#ffff00}.action-btn.monitoring.svelte-7n2d85.svelte-7n2d85{background:rgba(0, 255, 255, 0.1);border-color:#00ffff;color:#00ffff}.action-btn.external-link.svelte-7n2d85.svelte-7n2d85{background:rgba(128, 128, 128, 0.1);border-color:#888;color:#888}.action-btn.external-link.svelte-7n2d85.svelte-7n2d85:hover{background:rgba(128, 128, 128, 0.2)}.action-btn.lidarr-download.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 165, 0, 0.1);border-color:#ffa500;color:#ffa500;font-weight:bold}.action-btn.lidarr-download.svelte-7n2d85.svelte-7n2d85:hover{background:rgba(255, 165, 0, 0.2);box-shadow:0 0 15px rgba(255, 165, 0, 0.3)}.action-btn.magnet-link.svelte-7n2d85.svelte-7n2d85{background:rgba(138, 43, 226, 0.1);border-color:#8a2be2;color:#8a2be2}.action-btn.magnet-link.svelte-7n2d85.svelte-7n2d85:hover{background:rgba(138, 43, 226, 0.2)}.error-message.svelte-7n2d85.svelte-7n2d85,.no-results.svelte-7n2d85.svelte-7n2d85,.search-help.svelte-7n2d85.svelte-7n2d85{text-align:center;padding:60px 20px;color:#ccc}.error-icon.svelte-7n2d85.svelte-7n2d85,.no-results-icon.svelte-7n2d85.svelte-7n2d85,.help-icon.svelte-7n2d85.svelte-7n2d85{font-size:3rem;margin-bottom:20px;display:block}.no-results.svelte-7n2d85 h3.svelte-7n2d85,.search-help.svelte-7n2d85 h3.svelte-7n2d85{color:#fff;font-size:1.5rem;margin-bottom:10px}.retry-btn.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 107, 157, 0.1);border:1px solid #ff6b9d;color:#ff6b9d;padding:10px 20px;border-radius:8px;cursor:pointer;font-weight:bold;margin-top:15px;transition:all 0.2s ease}.retry-btn.svelte-7n2d85.svelte-7n2d85:hover{background:rgba(255, 107, 157, 0.2)}@media(max-width: 768px){.global-search.svelte-7n2d85.svelte-7n2d85{padding:15px}.search-title.svelte-7n2d85.svelte-7n2d85{font-size:2rem;flex-direction:column;gap:10px}.search-filters.svelte-7n2d85.svelte-7n2d85{flex-direction:column;align-items:center}.results-header.svelte-7n2d85.svelte-7n2d85{flex-direction:column;align-items:flex-start}.results-legend.svelte-7n2d85.svelte-7n2d85{flex-direction:column;gap:8px}.results-grid.svelte-7n2d85.svelte-7n2d85{grid-template-columns:1fr}.track-actions.svelte-7n2d85.svelte-7n2d85{justify-content:center}.action-btn.svelte-7n2d85.svelte-7n2d85{font-size:0.8rem;padding:6px 10px}}.action-btn.preview-btn.svelte-7n2d85.svelte-7n2d85{background:rgba(138, 43, 226, 0.1);border-color:#8a2be2;color:#8a2be2}.action-btn.preview-btn.svelte-7n2d85.svelte-7n2d85:hover{background:rgba(138, 43, 226, 0.2)}.action-btn.preview-btn.loading.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 165, 0, 0.1);border-color:#ffa500;color:#ffa500;cursor:wait}.action-btn.preview-btn.available.svelte-7n2d85.svelte-7n2d85{background:rgba(50, 205, 50, 0.1);border-color:#32cd32;color:#32cd32}.action-btn.preview-btn.unavailable.svelte-7n2d85.svelte-7n2d85{background:rgba(128, 128, 128, 0.1);border-color:#808080;color:#808080;opacity:0.6}.action-btn.download-btn.downloading.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 165, 0, 0.1);border-color:#ffa500;color:#ffa500;cursor:wait}.action-btn.download-btn.success.svelte-7n2d85.svelte-7n2d85{background:rgba(50, 205, 50, 0.1);border-color:#32cd32;color:#32cd32}.action-btn.download-btn.failed.svelte-7n2d85.svelte-7n2d85{background:rgba(220, 20, 60, 0.1);border-color:#dc143c;color:#dc143c}.action-btn.download-btn.default.svelte-7n2d85.svelte-7n2d85{background:rgba(0, 191, 255, 0.1);border-color:#00bfff;color:#00bfff}.action-btn.download-btn.default.svelte-7n2d85.svelte-7n2d85:hover{background:rgba(0, 191, 255, 0.2);transform:translateY(-1px)}.action-btn.queued.svelte-7n2d85.svelte-7n2d85{background:rgba(138, 43, 226, 0.1);border-color:#8a2be2;color:#8a2be2;cursor:wait}.action-btn.downloading.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 165, 0, 0.1);border-color:#ffa500;color:#ffa500;cursor:wait;animation:svelte-7n2d85-pulse 2s infinite}.action-btn.completed.svelte-7n2d85.svelte-7n2d85{background:rgba(50, 205, 50, 0.1);border-color:#32cd32;color:#32cd32}.action-btn.paused.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 215, 0, 0.1);border-color:#ffd700;color:#ffd700}.action-btn.monitoring.svelte-7n2d85.svelte-7n2d85{background:rgba(100, 149, 237, 0.1);border-color:#6495ed;color:#6495ed;cursor:wait}.download-section.svelte-7n2d85.svelte-7n2d85{display:flex;flex-direction:column;gap:8px;align-items:flex-start}.download-controls.svelte-7n2d85.svelte-7n2d85{display:flex;gap:4px;margin-top:4px}.small-btn.svelte-7n2d85.svelte-7n2d85{padding:4px 8px;font-size:12px;min-width:auto;height:24px}.pause-btn.svelte-7n2d85.svelte-7n2d85{background:rgba(255, 215, 0, 0.1);border-color:#ffd700;color:#ffd700}.pause-btn.svelte-7n2d85.svelte-7n2d85:hover{background:rgba(255, 215, 0, 0.2)}.cancel-btn.svelte-7n2d85.svelte-7n2d85{background:rgba(220, 20, 60, 0.1);border-color:#dc143c;color:#dc143c}.cancel-btn.svelte-7n2d85.svelte-7n2d85:hover{background:rgba(220, 20, 60, 0.2)}.download-info.svelte-7n2d85.svelte-7n2d85{margin-top:4px;font-size:11px;color:rgba(255, 255, 255, 0.7);background:rgba(0, 0, 0, 0.2);padding:2px 6px;border-radius:4px}@keyframes svelte-7n2d85-pulse{0%{opacity:1}50%{opacity:0.7}100%{opacity:1}}',
  map: '{"version":3,"file":"GlobalSearch.svelte","sources":["GlobalSearch.svelte"],"sourcesContent":["<script>\\n    import { onMount } from \\"svelte\\";\\n    import { musicPlayerActions } from \\"$lib/stores/musicPlayer.js\\";\\n\\n    // Component props\\n    export let placeholder = \\"Search music globally...\\";\\n    export let showFilters = true;\\n\\n    // Component state\\n    let mounted = false;\\n    let searchQuery = \\"\\";\\n    let searchResults = [];\\n    let isSearching = false;\\n    let searchError = null;\\n    let searchType = \\"global\\"; // \'global\', \'local\', \'external\'\\n    let searchCategory = \\"all\\"; // \'all\', \'artist\', \'album\', \'track\'\\n    let sortBy = \\"relevance\\"; // \'relevance\', \'popularity\', \'year\', \'duration\'\\n    let downloadRequests = new Map(); // Track download request status\\n    let previewRequests = new Map(); // Track preview request status\\n    let activeDownloads = new Map(); // Track active downloads\\n    let downloadStatuses = new Map(); // Track detailed download status from API\\n\\n    // No more debouncing - search only on submit/enter\\n\\n    onMount(() => {\\n        mounted = true;\\n        // Start polling for download status updates\\n        startDownloadStatusPolling();\\n    });\\n\\n    // Handle Enter key press\\n    function handleKeyDown(event) {\\n        if (event.key === \\"Enter\\") {\\n            handleSearchSubmit();\\n        }\\n    }\\n\\n    // Handle search submit (Enter key or button click)\\n    function handleSearchSubmit() {\\n        const query = searchQuery.trim();\\n        if (query.length >= 2) {\\n            performSearch(query);\\n        } else {\\n            searchResults = [];\\n            searchError = null;\\n        }\\n    }\\n\\n    // Main search function\\n    async function performSearch(query) {\\n        if (!query || query.length < 2) return;\\n\\n        isSearching = true;\\n        searchError = null;\\n\\n        try {\\n            const baseEndpoint =\\n                searchType === \\"external\\"\\n                    ? `/api/v1/search/external/${encodeURIComponent(query)}`\\n                    : `/api/v1/search/global/${encodeURIComponent(query)}`;\\n\\n            // Add search parameters\\n            const params = new URLSearchParams();\\n            params.append(\\"category\\", searchCategory);\\n            params.append(\\"type\\", searchType);\\n\\n            const endpoint = `${baseEndpoint}?${params.toString()}`;\\n\\n            const response = await fetch(endpoint);\\n            const data = await response.json();\\n\\n            if (data.success) {\\n                searchResults = sortResults(data.results || []);\\n            } else {\\n                searchError = data.message || \\"Search failed\\";\\n                searchResults = [];\\n            }\\n        } catch (error) {\\n            console.error(\\"Search error:\\", error);\\n            searchError = \\"Failed to perform search. Please try again.\\";\\n            searchResults = [];\\n        } finally {\\n            isSearching = false;\\n        }\\n    }\\n\\n    // Sort search results\\n    function sortResults(results) {\\n        return results.sort((a, b) => {\\n            switch (sortBy) {\\n                case \\"popularity\\":\\n                    return (b.popularity || 0) - (a.popularity || 0);\\n                case \\"year\\":\\n                    return (b.year || 0) - (a.year || 0);\\n                case \\"duration\\":\\n                    return (a.duration || 0) - (b.duration || 0);\\n                case \\"relevance\\":\\n                default:\\n                    // Prioritize local results, then by popularity\\n                    if (a.source === \\"local\\" && b.source !== \\"local\\") return -1;\\n                    if (b.source === \\"local\\" && a.source !== \\"local\\") return 1;\\n                    return (b.popularity || 0) - (a.popularity || 0);\\n            }\\n        });\\n    }\\n\\n    // Play track (local only)\\n    function playTrack(track) {\\n        if (track.available && track.stream_url) {\\n            console.log(\\"Playing track from global search:\\", track.title);\\n            if (musicPlayerActions && musicPlayerActions.playTrack) {\\n                musicPlayerActions.playTrack(track);\\n            } else {\\n                console.warn(\\"Music player actions not available\\");\\n            }\\n        }\\n    }\\n\\n    // Add track to queue (local only)\\n    function addToQueue(track) {\\n        if (track.available && track.stream_url) {\\n            console.log(\\n                \\"Adding track to queue from global search:\\",\\n                track.title,\\n            );\\n            if (musicPlayerActions && musicPlayerActions.addToQueue) {\\n                musicPlayerActions.addToQueue(track);\\n            } else {\\n                console.warn(\\"Music player actions not available\\");\\n            }\\n        }\\n    }\\n\\n    // Request download for external tracks\\n    async function requestDownload(track) {\\n        const requestId = `${track.artist}-${track.title}`;\\n\\n        if (downloadRequests.has(requestId)) {\\n            return; // Already requested\\n        }\\n\\n        downloadRequests.set(requestId, \\"requesting\\");\\n        downloadRequests = downloadRequests; // Trigger reactivity\\n\\n        try {\\n            const response = await fetch(\\"/api/v1/download/request\\", {\\n                method: \\"POST\\",\\n                headers: {\\n                    \\"Content-Type\\": \\"application/json\\",\\n                },\\n                body: JSON.stringify({\\n                    title: track.title,\\n                    artist: track.artist,\\n                    album: track.album,\\n                    external_id: track.id,\\n                    source: track.source,\\n                }),\\n            });\\n\\n            const data = await response.json();\\n\\n            if (data.success) {\\n                downloadRequests.set(requestId, \\"monitoring\\");\\n                // Store the actual request ID for status tracking\\n                if (data.request_id) {\\n                    downloadStatuses.set(requestId, {\\n                        request_id: data.request_id,\\n                        status: data.status || \\"queued\\",\\n                        artist_name: track.artist,\\n                        track_title: track.title,\\n                    });\\n                }\\n                console.log(\\"Download request successful:\\", data.message);\\n            } else {\\n                downloadRequests.set(requestId, \\"failed\\");\\n                console.error(\\"Download request failed:\\", data.message);\\n            }\\n        } catch (error) {\\n            console.error(\\"Download request error:\\", error);\\n            downloadRequests.set(requestId, \\"failed\\");\\n        }\\n\\n        downloadRequests = downloadRequests; // Trigger reactivity\\n    }\\n\\n    // Get download status for a track\\n    function getDownloadStatus(track) {\\n        const requestId = `${track.artist}-${track.title}`;\\n        const detailedStatus = downloadStatuses.get(requestId);\\n        if (detailedStatus) {\\n            return detailedStatus.status;\\n        }\\n        return downloadRequests.get(requestId) || null;\\n    }\\n\\n    // Start polling for download status updates\\n    function startDownloadStatusPolling() {\\n        setInterval(async () => {\\n            await updateDownloadStatuses();\\n        }, 5000); // Poll every 5 seconds\\n    }\\n\\n    // Update download statuses from API\\n    async function updateDownloadStatuses() {\\n        for (const [requestId, statusData] of downloadStatuses.entries()) {\\n            if (\\n                statusData.request_id &&\\n                (statusData.status === \\"queued\\" ||\\n                    statusData.status === \\"downloading\\")\\n            ) {\\n                try {\\n                    const response = await fetch(\\n                        `/api/v1/download/status/${statusData.request_id}`,\\n                    );\\n                    const data = await response.json();\\n\\n                    if (data.success) {\\n                        statusData.status = data.status;\\n                        statusData.progress = data.progress || 0;\\n                        statusData.download_speed = data.download_speed;\\n                        statusData.file_size = data.file_size;\\n                        statusData.torrent_hash = data.torrent_hash;\\n                        downloadStatuses.set(requestId, statusData);\\n\\n                        // Update the main status map\\n                        if (data.status === \\"completed\\") {\\n                            downloadRequests.set(requestId, \\"completed\\");\\n                        } else if (data.status === \\"downloading\\") {\\n                            downloadRequests.set(requestId, \\"downloading\\");\\n                        } else if (\\n                            data.status === \\"failed\\" ||\\n                            data.status === \\"error\\"\\n                        ) {\\n                            downloadRequests.set(requestId, \\"failed\\");\\n                        }\\n\\n                        // Trigger reactivity\\n                        downloadStatuses = downloadStatuses;\\n                        downloadRequests = downloadRequests;\\n                    }\\n                } catch (error) {\\n                    console.error(\\"Failed to update download status:\\", error);\\n                }\\n            }\\n        }\\n    }\\n\\n    // Pause a download\\n    async function pauseDownload(track) {\\n        const requestId = `${track.artist}-${track.title}`;\\n        const statusData = downloadStatuses.get(requestId);\\n\\n        if (statusData && statusData.torrent_hash) {\\n            try {\\n                const response = await fetch(\\n                    `/api/v1/download/pause/${statusData.torrent_hash}`,\\n                    {\\n                        method: \\"POST\\",\\n                    },\\n                );\\n                const data = await response.json();\\n\\n                if (data.success) {\\n                    console.log(\\"Download paused successfully\\");\\n                    updateDownloadStatuses();\\n                }\\n            } catch (error) {\\n                console.error(\\"Failed to pause download:\\", error);\\n            }\\n        }\\n    }\\n\\n    // Resume a download\\n    async function resumeDownload(track) {\\n        const requestId = `${track.artist}-${track.title}`;\\n        const statusData = downloadStatuses.get(requestId);\\n\\n        if (statusData && statusData.torrent_hash) {\\n            try {\\n                const response = await fetch(\\n                    `/api/v1/download/resume/${statusData.torrent_hash}`,\\n                    {\\n                        method: \\"POST\\",\\n                    },\\n                );\\n                const data = await response.json();\\n\\n                if (data.success) {\\n                    console.log(\\"Download resumed successfully\\");\\n                    updateDownloadStatuses();\\n                }\\n            } catch (error) {\\n                console.error(\\"Failed to resume download:\\", error);\\n            }\\n        }\\n    }\\n\\n    // Cancel a download\\n    async function cancelDownload(track) {\\n        const requestId = `${track.artist}-${track.title}`;\\n        const statusData = downloadStatuses.get(requestId);\\n\\n        if (statusData && statusData.torrent_hash) {\\n            try {\\n                const response = await fetch(\\n                    `/api/v1/download/cancel/${statusData.torrent_hash}`,\\n                    {\\n                        method: \\"POST\\",\\n                    },\\n                );\\n                const data = await response.json();\\n\\n                if (data.success) {\\n                    downloadRequests.set(requestId, \\"cancelled\\");\\n                    downloadStatuses.delete(requestId);\\n                    downloadRequests = downloadRequests;\\n                    downloadStatuses = downloadStatuses;\\n                    console.log(\\"Download cancelled successfully\\");\\n                }\\n            } catch (error) {\\n                console.error(\\"Failed to cancel download:\\", error);\\n            }\\n        }\\n    }\\n\\n    // Get detailed download info for display\\n    function getDownloadInfo(track) {\\n        const requestId = `${track.artist}-${track.title}`;\\n        return downloadStatuses.get(requestId) || null;\\n    }\\n\\n    // Get enhanced download button state with detailed status\\n    function getEnhancedDownloadState(track) {\\n        const requestId = `${track.artist}-${track.title}`;\\n        const basicStatus = downloadRequests.get(requestId);\\n        const detailedStatus = downloadStatuses.get(requestId);\\n\\n        if (basicStatus === \\"requesting\\") {\\n            return {\\n                text: \\"⏳ Requesting...\\",\\n                disabled: true,\\n                class: \\"requesting\\",\\n            };\\n        }\\n\\n        if (detailedStatus) {\\n            switch (detailedStatus.status) {\\n                case \\"queued\\":\\n                    return {\\n                        text: \\"📦 Queued\\",\\n                        disabled: true,\\n                        class: \\"queued\\",\\n                    };\\n                case \\"downloading\\":\\n                    const progress = Math.round(\\n                        (detailedStatus.progress || 0) * 100,\\n                    );\\n                    return {\\n                        text: `⬇️ ${progress}%`,\\n                        disabled: true,\\n                        class: \\"downloading\\",\\n                    };\\n                case \\"completed\\":\\n                    return {\\n                        text: \\"✅ Completed\\",\\n                        disabled: true,\\n                        class: \\"completed\\",\\n                    };\\n                case \\"failed\\":\\n                case \\"error\\":\\n                    return {\\n                        text: \\"🔄 Retry\\",\\n                        disabled: false,\\n                        class: \\"failed\\",\\n                    };\\n                case \\"paused\\":\\n                    return {\\n                        text: \\"⏸️ Paused\\",\\n                        disabled: true,\\n                        class: \\"paused\\",\\n                    };\\n                default:\\n                    return {\\n                        text: \\"👁️ Monitoring\\",\\n                        disabled: true,\\n                        class: \\"monitoring\\",\\n                    };\\n            }\\n        }\\n\\n        if (basicStatus === \\"monitoring\\") {\\n            return {\\n                text: \\"👁️ Monitoring\\",\\n                disabled: true,\\n                class: \\"monitoring\\",\\n            };\\n        }\\n\\n        if (basicStatus === \\"failed\\") {\\n            return {\\n                text: \\"🔄 Retry\\",\\n                disabled: false,\\n                class: \\"failed\\",\\n            };\\n        }\\n\\n        if (basicStatus === \\"completed\\") {\\n            return {\\n                text: \\"✅ Complete\\",\\n                disabled: true,\\n                class: \\"completed\\",\\n            };\\n        }\\n\\n        // Default state\\n        return {\\n            text: `⬇️ Get ${track.quality || \\"Music\\"}`,\\n            disabled: false,\\n            class: \\"default\\",\\n        };\\n    }\\n\\n    // Clear search\\n    function clearSearch() {\\n        searchQuery = \\"\\";\\n        searchResults = [];\\n        searchError = null;\\n    }\\n\\n    // Format duration\\n    function formatDuration(seconds) {\\n        if (!seconds) return \\"\\";\\n        const mins = Math.floor(seconds / 60);\\n        const secs = seconds % 60;\\n        return `${mins}:${secs.toString().padStart(2, \\"0\\")}`;\\n    }\\n\\n    // Handle search type change\\n    function handleSearchTypeChange() {\\n        if (searchQuery.length >= 2 && searchResults.length > 0) {\\n            handleSearchSubmit();\\n        }\\n    }\\n\\n    // Handle sort change\\n    function handleSearchCategoryChange() {\\n        if (searchQuery.length >= 2 && searchResults.length > 0) {\\n            handleSearchSubmit();\\n        }\\n    }\\n\\n    function handleSortChange() {\\n        if (searchResults.length > 0) {\\n            searchResults = sortResults(searchResults);\\n        }\\n    }\\n\\n    // Download MusicBrainz entity\\n    async function downloadMusicBrainzEntity(track) {\\n        const requestKey = track.musicbrainz_id || track.id;\\n\\n        if (downloadRequests.get(requestKey) === \\"downloading\\") {\\n            return; // Already downloading\\n        }\\n\\n        downloadRequests.set(requestKey, \\"downloading\\");\\n        searchResults = [...searchResults]; // Trigger reactivity\\n\\n        try {\\n            const payload = {\\n                type: track.type || \\"track\\",\\n                name: track.title,\\n                artist: track.artist,\\n                mbid: track.musicbrainz_id,\\n            };\\n\\n            const response = await fetch(\\n                `/api/v1/download/musicbrainz/${track.musicbrainz_id}`,\\n                {\\n                    method: \\"POST\\",\\n                    headers: {\\n                        \\"Content-Type\\": \\"application/json\\",\\n                    },\\n                    body: JSON.stringify(payload),\\n                },\\n            );\\n\\n            const result = await response.json();\\n\\n            if (result.success) {\\n                downloadRequests.set(requestKey, \\"success\\");\\n                if (result.downloads && result.downloads.length > 0) {\\n                    // Show available downloads\\n                    activeDownloads.set(requestKey, result.downloads);\\n                }\\n            } else {\\n                downloadRequests.set(requestKey, \\"failed\\");\\n                console.error(\\"Download failed:\\", result.error);\\n            }\\n        } catch (error) {\\n            console.error(\\"Download error:\\", error);\\n            downloadRequests.set(requestKey, \\"failed\\");\\n        }\\n\\n        searchResults = [...searchResults]; // Trigger reactivity\\n    }\\n\\n    // Preview MusicBrainz track\\n    async function previewMusicBrainzTrack(track) {\\n        const requestKey = track.musicbrainz_id || track.id;\\n\\n        if (previewRequests.get(requestKey) === \\"loading\\") {\\n            return; // Already loading\\n        }\\n\\n        previewRequests.set(requestKey, \\"loading\\");\\n        searchResults = [...searchResults]; // Trigger reactivity\\n\\n        try {\\n            const response = await fetch(\\n                `/api/v1/preview/musicbrainz/${track.musicbrainz_id}`,\\n            );\\n            const result = await response.json();\\n\\n            if (result.success && result.stream_url) {\\n                previewRequests.set(requestKey, \\"available\\");\\n                // In a real implementation, this would start playback\\n                console.log(\\"Preview available:\\", result.stream_url);\\n            } else {\\n                previewRequests.set(requestKey, \\"unavailable\\");\\n            }\\n        } catch (error) {\\n            console.error(\\"Preview error:\\", error);\\n            previewRequests.set(requestKey, \\"unavailable\\");\\n        }\\n\\n        searchResults = [...searchResults]; // Trigger reactivity\\n    }\\n\\n    // Get download status for display\\n    function getDownloadButtonState(track) {\\n        const requestKey = track.musicbrainz_id || track.id;\\n        const status = downloadRequests.get(requestKey);\\n        const hasActiveDownloads = activeDownloads.has(requestKey);\\n\\n        if (status === \\"downloading\\")\\n            return {\\n                text: \\"Searching...\\",\\n                disabled: true,\\n                class: \\"downloading\\",\\n            };\\n        if (status === \\"success\\" && hasActiveDownloads)\\n            return { text: \\"Available\\", disabled: false, class: \\"success\\" };\\n        if (status === \\"success\\")\\n            return {\\n                text: \\"Added to Monitor\\",\\n                disabled: true,\\n                class: \\"success\\",\\n            };\\n        if (status === \\"failed\\")\\n            return { text: \\"Try Again\\", disabled: false, class: \\"failed\\" };\\n        return { text: \\"Download\\", disabled: false, class: \\"default\\" };\\n    }\\n\\n    // Get preview status for display\\n    function getPreviewButtonState(track) {\\n        const requestKey = track.musicbrainz_id || track.id;\\n        const status = previewRequests.get(requestKey);\\n\\n        if (status === \\"loading\\")\\n            return { text: \\"Loading...\\", disabled: true, class: \\"loading\\" };\\n        if (status === \\"available\\")\\n            return {\\n                text: \\"Play Preview\\",\\n                disabled: false,\\n                class: \\"available\\",\\n            };\\n        if (status === \\"unavailable\\")\\n            return { text: \\"No Preview\\", disabled: true, class: \\"unavailable\\" };\\n        return { text: \\"Preview\\", disabled: false, class: \\"default\\" };\\n    }\\n<\/script>\\n\\n<div class=\\"global-search\\" class:loaded={mounted}>\\n    <!-- Search Header -->\\n    <div class=\\"search-header\\">\\n        <h2 class=\\"search-title\\">\\n            <span class=\\"title-icon\\">🔍</span>\\n            Global Music Search\\n        </h2>\\n        <p class=\\"search-subtitle\\">\\n            Search your library and discover new music from external sources\\n        </p>\\n    </div>\\n\\n    <!-- Search Controls -->\\n    <div class=\\"search-controls\\">\\n        <!-- Search Input -->\\n        <div class=\\"search-input-container\\">\\n            <div class=\\"search-input-wrapper\\">\\n                <input\\n                    type=\\"text\\"\\n                    class=\\"search-input\\"\\n                    bind:value={searchQuery}\\n                    on:keydown={handleKeyDown}\\n                    {placeholder}\\n                    autocomplete=\\"off\\"\\n                />\\n                <div class=\\"search-icon\\">🔍</div>\\n                {#if searchQuery}\\n                    <button class=\\"clear-search-btn\\" on:click={clearSearch}\\n                        >✕</button\\n                    >\\n                {/if}\\n                {#if isSearching}\\n                    <div class=\\"search-loading\\">\\n                        <div class=\\"loading-spinner\\"></div>\\n                    </div>\\n                {/if}\\n            </div>\\n\\n            <!-- Search Submit Button -->\\n            <button\\n                class=\\"search-submit-btn\\"\\n                on:click={handleSearchSubmit}\\n                disabled={searchQuery.trim().length < 2 || isSearching}\\n            >\\n                {#if isSearching}\\n                    Searching...\\n                {:else}\\n                    Search\\n                {/if}\\n            </button>\\n        </div>\\n\\n        <!-- Search Filters -->\\n        {#if showFilters}\\n            <div class=\\"search-filters\\">\\n                <div class=\\"filter-group\\">\\n                    <label class=\\"filter-label\\">Search Type:</label>\\n                    <select\\n                        bind:value={searchType}\\n                        on:change={handleSearchTypeChange}\\n                        class=\\"filter-select\\"\\n                    >\\n                        <option value=\\"global\\">All Sources</option>\\n                        <option value=\\"local\\">Local Only</option>\\n                        <option value=\\"external\\">External Only</option>\\n                    </select>\\n                </div>\\n\\n                <div class=\\"filter-group\\">\\n                    <label class=\\"filter-label\\">Search for:</label>\\n                    <select\\n                        bind:value={searchCategory}\\n                        on:change={handleSearchCategoryChange}\\n                        class=\\"filter-select\\"\\n                    >\\n                        <option value=\\"all\\">Everything</option>\\n                        <option value=\\"artist\\">Artists</option>\\n                        <option value=\\"album\\">Albums</option>\\n                        <option value=\\"track\\">Tracks</option>\\n                    </select>\\n                </div>\\n\\n                <div class=\\"filter-group\\">\\n                    <label class=\\"filter-label\\">Sort by:</label>\\n                    <select\\n                        bind:value={sortBy}\\n                        on:change={handleSortChange}\\n                        class=\\"filter-select\\"\\n                    >\\n                        <option value=\\"relevance\\">Relevance</option>\\n                        <option value=\\"popularity\\">Popularity</option>\\n                        <option value=\\"year\\">Year</option>\\n                        <option value=\\"duration\\">Duration</option>\\n                    </select>\\n                </div>\\n            </div>\\n        {/if}\\n    </div>\\n\\n    <!-- Search Results -->\\n    <div class=\\"search-results\\">\\n        {#if searchError}\\n            <div class=\\"error-message\\">\\n                <span class=\\"error-icon\\">⚠️</span>\\n                <p>{searchError}</p>\\n                <button\\n                    class=\\"retry-btn\\"\\n                    on:click={() => performSearch(searchQuery)}\\n                >\\n                    Retry Search\\n                </button>\\n            </div>\\n        {:else if searchResults.length > 0}\\n            <div class=\\"results-header\\">\\n                <h3>Search Results ({searchResults.length})</h3>\\n                <div class=\\"results-legend\\">\\n                    <span class=\\"legend-item\\">\\n                        <span class=\\"source-badge local\\">Local</span>\\n                        Available in library\\n                    </span>\\n                    <span class=\\"legend-item\\">\\n                        <span class=\\"source-badge external\\">External</span>\\n                        Can be downloaded\\n                    </span>\\n                </div>\\n            </div>\\n\\n            <div class=\\"results-grid\\">\\n                {#each searchResults as track}\\n                    <div\\n                        class=\\"track-card\\"\\n                        class:local={track.source === \\"local\\"}\\n                        class:external={track.source !== \\"local\\"}\\n                    >\\n                        <!-- Track Info -->\\n                        <div class=\\"track-info\\">\\n                            <h4 class=\\"track-title\\">{track.title}</h4>\\n                            <p class=\\"track-artist\\">{track.artist}</p>\\n                            <p class=\\"track-album\\">\\n                                {track.album || \\"Unknown Album\\"}\\n                            </p>\\n                            <div class=\\"track-meta\\">\\n                                {#if track.year}\\n                                    <span class=\\"meta-item\\"\\n                                        >📅 {track.year}</span\\n                                    >\\n                                {/if}\\n                                {#if track.duration}\\n                                    <span class=\\"meta-item\\"\\n                                        >⏱️ {formatDuration(\\n                                            track.duration,\\n                                        )}</span\\n                                    >\\n                                {/if}\\n                                {#if track.genre}\\n                                    <span class=\\"meta-item genre\\"\\n                                        >🎵 {track.genre}</span\\n                                    >\\n                                {/if}\\n                                {#if track.source === \\"lidarr\\"}\\n                                    {#if track.quality}\\n                                        <span class=\\"meta-item quality\\"\\n                                            >🎧 {track.quality}</span\\n                                        >\\n                                    {/if}\\n                                    {#if track.size_mb}\\n                                        <span class=\\"meta-item size\\"\\n                                            >💾 {track.size_mb}MB</span\\n                                        >\\n                                    {/if}\\n                                    {#if track.seeders !== undefined}\\n                                        <span class=\\"meta-item seeders\\"\\n                                            >🌱 {track.seeders}↑ {track.leechers}↓</span\\n                                        >\\n                                    {/if}\\n                                {/if}\\n                                {#if track.source === \\"musicbrainz\\"}\\n                                    {#if track.rating && track.rating > 0}\\n                                        <span class=\\"meta-item rating\\"\\n                                            >⭐ {track.rating}/5</span\\n                                        >\\n                                    {/if}\\n                                    {#if track.country}\\n                                        <span class=\\"meta-item country\\"\\n                                            >🌍 {track.country}</span\\n                                        >\\n                                    {/if}\\n                                    {#if track.type}\\n                                        <span class=\\"meta-item type\\"\\n                                            >🏷️ {track.type}</span\\n                                        >\\n                                    {/if}\\n                                    {#if track.aliases && track.aliases.length > 0}\\n                                        <span class=\\"meta-item aliases\\"\\n                                            >📝 {track.aliases}</span\\n                                        >\\n                                    {/if}\\n                                    {#if track.isrcs && track.isrcs.length > 0}\\n                                        <span class=\\"meta-item isrcs\\"\\n                                            >🔢 ISRC</span\\n                                        >\\n                                    {/if}\\n                                    {#if track.score && track.score > 0}\\n                                        <span class=\\"meta-item score\\"\\n                                            >🎯 {track.score}% match</span\\n                                        >\\n                                    {/if}\\n                                {/if}\\n                            </div>\\n                        </div>\\n\\n                        <!-- Source Badge -->\\n                        <div class=\\"source-info\\">\\n                            <span\\n                                class=\\"source-badge\\"\\n                                class:local={track.source === \\"local\\"}\\n                                class:external={track.source !== \\"local\\" &&\\n                                    track.source !== \\"lidarr\\"}\\n                                class:lidarr={track.source === \\"lidarr\\"}\\n                            >\\n                                {#if track.source === \\"local\\"}\\n                                    🏠 Local\\n                                {:else if track.source === \\"lidarr\\"}\\n                                    ⬇️ Download\\n                                {:else}\\n                                    🌐 External\\n                                {/if}\\n                            </span>\\n                            {#if track.popularity}\\n                                <span class=\\"popularity\\">\\n                                    {\\"★\\".repeat(\\n                                        Math.ceil(track.popularity / 20),\\n                                    )}\\n                                </span>\\n                            {/if}\\n                            {#if track.source === \\"lidarr\\" && track.indexer}\\n                                <span class=\\"indexer\\">📡 {track.indexer}</span>\\n                            {/if}\\n                        </div>\\n\\n                        <!-- Track Actions -->\\n                        <div class=\\"track-actions\\">\\n                            {#if track.available && track.stream_url}\\n                                <button\\n                                    class=\\"action-btn play-btn\\"\\n                                    on:click={() => playTrack(track)}\\n                                    title=\\"Play Track\\"\\n                                >\\n                                    ▶️ Play\\n                                </button>\\n                                <button\\n                                    class=\\"action-btn queue-btn\\"\\n                                    on:click={() => addToQueue(track)}\\n                                    title=\\"Add to Queue\\"\\n                                >\\n                                    ➕ Queue\\n                                </button>\\n                            {:else if track.source === \\"musicbrainz\\"}\\n                                <!-- MusicBrainz specific actions -->\\n                                {#if track.type === \\"track\\"}\\n                                    {@const previewState =\\n                                        getPreviewButtonState(track)}\\n                                    <button\\n                                        class=\\"action-btn preview-btn {previewState.class}\\"\\n                                        on:click={() =>\\n                                            previewMusicBrainzTrack(track)}\\n                                        disabled={previewState.disabled}\\n                                    >\\n                                        🎵 {previewState.text}\\n                                    </button>\\n                                {/if}\\n\\n                                {@const downloadState =\\n                                    getDownloadButtonState(track)}\\n                                <button\\n                                    class=\\"action-btn download-btn {downloadState.class}\\"\\n                                    on:click={() =>\\n                                        downloadMusicBrainzEntity(track)}\\n                                    disabled={downloadState.disabled}\\n                                >\\n                                    ⬇ {downloadState.text}\\n                                </button>\\n\\n                                {#if track.external_url}\\n                                    <a\\n                                        href={track.external_url}\\n                                        target=\\"_blank\\"\\n                                        rel=\\"noopener noreferrer\\"\\n                                        class=\\"action-btn external-link\\"\\n                                    >\\n                                        🔗 MusicBrainz\\n                                    </a>\\n                                {/if}\\n                            {:else if track.source === \\"lidarr\\" && track.downloadable}\\n                                {@const downloadState =\\n                                    getEnhancedDownloadState(track)}\\n                                {@const downloadInfo = getDownloadInfo(track)}\\n\\n                                <div class=\\"download-section\\">\\n                                    <button\\n                                        class=\\"action-btn download-btn {downloadState.class}\\"\\n                                        on:click={() => requestDownload(track)}\\n                                        disabled={downloadState.disabled}\\n                                        title=\\"Download {track.quality} - {track.size_mb}MB\\"\\n                                    >\\n                                        {downloadState.text}\\n                                    </button>\\n\\n                                    {#if downloadInfo && (downloadInfo.status === \\"downloading\\" || downloadInfo.status === \\"queued\\")}\\n                                        <div class=\\"download-controls\\">\\n                                            {#if downloadInfo.status === \\"downloading\\"}\\n                                                <button\\n                                                    class=\\"action-btn small-btn pause-btn\\"\\n                                                    on:click={() =>\\n                                                        pauseDownload(track)}\\n                                                    title=\\"Pause Download\\"\\n                                                >\\n                                                    ⏸️\\n                                                </button>\\n                                            {/if}\\n                                            <button\\n                                                class=\\"action-btn small-btn cancel-btn\\"\\n                                                on:click={() =>\\n                                                    cancelDownload(track)}\\n                                                title=\\"Cancel Download\\"\\n                                            >\\n                                                ❌\\n                                            </button>\\n                                        </div>\\n\\n                                        {#if downloadInfo.download_speed}\\n                                            <div class=\\"download-info\\">\\n                                                <small\\n                                                    >Speed: {Math.round(\\n                                                        downloadInfo.download_speed /\\n                                                            1024,\\n                                                    )} KB/s</small\\n                                                >\\n                                            </div>\\n                                        {/if}\\n                                    {/if}\\n                                </div>\\n\\n                                {#if track.magnet_url}\\n                                    <a\\n                                        href={track.magnet_url}\\n                                        target=\\"_blank\\"\\n                                        rel=\\"noopener noreferrer\\"\\n                                        class=\\"action-btn external-link magnet-link\\"\\n                                        title=\\"Open Magnet Link\\"\\n                                    >\\n                                        🧲 Magnet\\n                                    </a>\\n                                {/if}\\n                            {:else}\\n                                {#if getDownloadStatus(track) === \\"requesting\\"}\\n                                    <button\\n                                        class=\\"action-btn requesting\\"\\n                                        disabled\\n                                    >\\n                                        ⏳ Requesting...\\n                                    </button>\\n                                {:else if getDownloadStatus(track) === \\"monitoring\\"}\\n                                    <button\\n                                        class=\\"action-btn monitoring\\"\\n                                        disabled\\n                                    >\\n                                        👁️ Monitoring\\n                                    </button>\\n                                {:else if getDownloadStatus(track) === \\"failed\\"}\\n                                    <button\\n                                        class=\\"action-btn download-btn\\"\\n                                        on:click={() => requestDownload(track)}\\n                                        title=\\"Retry Download\\"\\n                                    >\\n                                        🔄 Retry Download\\n                                    </button>\\n                                {:else}\\n                                    <button\\n                                        class=\\"action-btn download-btn\\"\\n                                        on:click={() => requestDownload(track)}\\n                                        title=\\"Request Download\\"\\n                                    >\\n                                        ⬇️ Download\\n                                    </button>\\n                                {/if}\\n\\n                                {#if track.external_url}\\n                                    <a\\n                                        href={track.external_url}\\n                                        target=\\"_blank\\"\\n                                        rel=\\"noopener noreferrer\\"\\n                                        class=\\"action-btn external-link\\"\\n                                        title=\\"Open External Link\\"\\n                                    >\\n                                        🔗 Open\\n                                    </a>\\n                                {/if}\\n                            {/if}\\n                        </div>\\n                    </div>\\n                {/each}\\n            </div>\\n        {:else if searchQuery.length >= 2 && !isSearching}\\n            <div class=\\"no-results\\">\\n                <span class=\\"no-results-icon\\">🔍</span>\\n                <h3>No Results Found</h3>\\n                <p>\\n                    No tracks found for \\"{searchQuery}\\". Try different keywords\\n                    or check external sources.\\n                </p>\\n            </div>\\n        {:else if searchQuery.length < 2}\\n            <div class=\\"search-help\\">\\n                <span class=\\"help-icon\\">💡</span>\\n                <h3>Start Searching</h3>\\n                <p>\\n                    Enter at least 2 characters to search for music across your\\n                    library and external sources.\\n                </p>\\n            </div>\\n        {/if}\\n    </div>\\n</div>\\n\\n<style>\\n    .global-search {\\n        opacity: 0;\\n        transition: opacity 0.5s ease-in-out;\\n        max-width: 1200px;\\n        margin: 0 auto;\\n        padding: 20px;\\n    }\\n\\n    .global-search.loaded {\\n        opacity: 1;\\n    }\\n\\n    /* Header */\\n    .search-header {\\n        text-align: center;\\n        margin-bottom: 30px;\\n    }\\n\\n    .search-title {\\n        font-size: 2.5rem;\\n        font-weight: bold;\\n        background: linear-gradient(135deg, #ff6b9d, #00ffff);\\n        -webkit-background-clip: text;\\n        -webkit-text-fill-color: transparent;\\n        margin-bottom: 10px;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        gap: 15px;\\n    }\\n\\n    .title-icon {\\n        font-size: 2rem;\\n    }\\n\\n    .search-subtitle {\\n        color: #ccc;\\n        font-size: 1.1rem;\\n        margin-bottom: 20px;\\n    }\\n\\n    /* Search Controls */\\n    .search-controls {\\n        margin-bottom: 30px;\\n    }\\n\\n    .search-input-container {\\n        margin-bottom: 20px;\\n        display: flex;\\n        gap: 12px;\\n        align-items: stretch;\\n    }\\n\\n    .search-input-wrapper {\\n        position: relative;\\n        width: 100%;\\n        max-width: 600px;\\n        flex: 1;\\n    }\\n\\n    .search-input {\\n        width: 100%;\\n        padding: 15px 50px 15px 20px;\\n        background: rgba(20, 20, 30, 0.8);\\n        border: 2px solid rgba(0, 255, 255, 0.3);\\n        border-radius: 25px;\\n        color: #fff;\\n        font-size: 1.1rem;\\n        transition: all 0.3s ease;\\n    }\\n\\n    .search-input:focus {\\n        outline: none;\\n        border-color: #00ffff;\\n        box-shadow: 0 0 20px rgba(0, 255, 255, 0.3);\\n    }\\n\\n    .search-input::placeholder {\\n        color: #888;\\n    }\\n\\n    .search-icon {\\n        position: absolute;\\n        right: 15px;\\n        top: 50%;\\n        transform: translateY(-50%);\\n        color: #00ffff;\\n        font-size: 1.2rem;\\n    }\\n\\n    .clear-search-btn {\\n        position: absolute;\\n        right: 45px;\\n        top: 50%;\\n        transform: translateY(-50%);\\n        background: none;\\n        border: none;\\n        color: #ff6b9d;\\n        font-size: 1.2rem;\\n        cursor: pointer;\\n        padding: 5px;\\n        border-radius: 50%;\\n        transition: all 0.2s ease;\\n    }\\n\\n    .clear-search-btn:hover {\\n        background: rgba(255, 107, 157, 0.2);\\n    }\\n\\n    .search-submit-btn {\\n        background: linear-gradient(135deg, #ff6b9d, #00ffff);\\n        color: white;\\n        border: none;\\n        padding: 12px 24px;\\n        border-radius: 12px;\\n        font-weight: 600;\\n        cursor: pointer;\\n        transition: all 0.3s ease;\\n        white-space: nowrap;\\n        min-width: 100px;\\n        height: 48px;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n    }\\n\\n    .search-submit-btn:hover:not(:disabled) {\\n        transform: translateY(-2px);\\n        box-shadow: 0 8px 25px rgba(0, 255, 255, 0.3);\\n    }\\n\\n    .search-submit-btn:disabled {\\n        opacity: 0.5;\\n        cursor: not-allowed;\\n        transform: none;\\n    }\\n\\n    .search-loading {\\n        position: absolute;\\n        right: 80px;\\n        top: 50%;\\n        transform: translateY(-50%);\\n    }\\n\\n    .loading-spinner {\\n        width: 20px;\\n        height: 20px;\\n        border: 2px solid rgba(0, 255, 255, 0.3);\\n        border-top: 2px solid #00ffff;\\n        border-radius: 50%;\\n        animation: spin 1s linear infinite;\\n    }\\n\\n    @keyframes spin {\\n        0% {\\n            transform: rotate(0deg);\\n        }\\n        100% {\\n            transform: rotate(360deg);\\n        }\\n    }\\n\\n    /* Search Filters */\\n    .search-filters {\\n        display: flex;\\n        justify-content: center;\\n        gap: 20px;\\n        flex-wrap: wrap;\\n    }\\n\\n    .filter-group {\\n        display: flex;\\n        align-items: center;\\n        gap: 8px;\\n    }\\n\\n    .filter-label {\\n        color: #ccc;\\n        font-size: 0.9rem;\\n        white-space: nowrap;\\n    }\\n\\n    .filter-select {\\n        background: rgba(20, 20, 30, 0.8);\\n        border: 1px solid rgba(0, 255, 255, 0.3);\\n        border-radius: 8px;\\n        color: #fff;\\n        padding: 8px 12px;\\n        font-size: 0.9rem;\\n        cursor: pointer;\\n        transition: all 0.3s ease;\\n    }\\n\\n    .filter-select:focus {\\n        outline: none;\\n        border-color: #00ffff;\\n    }\\n\\n    /* Results */\\n    .results-header {\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: center;\\n        margin-bottom: 20px;\\n        flex-wrap: wrap;\\n        gap: 15px;\\n    }\\n\\n    .results-header h3 {\\n        color: #fff;\\n        font-size: 1.3rem;\\n        margin: 0;\\n    }\\n\\n    .results-legend {\\n        display: flex;\\n        gap: 15px;\\n        font-size: 0.9rem;\\n        color: #ccc;\\n    }\\n\\n    .legend-item {\\n        display: flex;\\n        align-items: center;\\n        gap: 5px;\\n    }\\n\\n    .results-grid {\\n        display: grid;\\n        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\\n        gap: 20px;\\n    }\\n\\n    .track-card {\\n        background: rgba(20, 20, 30, 0.9);\\n        border: 1px solid rgba(255, 255, 255, 0.1);\\n        border-radius: 12px;\\n        padding: 20px;\\n        transition: all 0.3s ease;\\n        position: relative;\\n        overflow: hidden;\\n    }\\n\\n    .track-card::before {\\n        content: \\"\\";\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        right: 0;\\n        height: 3px;\\n        background: linear-gradient(\\n            90deg,\\n            transparent,\\n            rgba(0, 255, 255, 0.5),\\n            transparent\\n        );\\n        opacity: 0;\\n        transition: opacity 0.3s ease;\\n    }\\n\\n    .track-card:hover {\\n        transform: translateY(-5px);\\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\\n        border-color: rgba(0, 255, 255, 0.3);\\n    }\\n\\n    .track-card:hover::before {\\n        opacity: 1;\\n    }\\n\\n    .track-card.local {\\n        border-left: 3px solid #00ff88;\\n    }\\n\\n    .track-card.external {\\n        border-left: 3px solid #ff6b9d;\\n    }\\n\\n    .track-card.lidarr {\\n        border-left: 3px solid #ffa500;\\n    }\\n\\n    .track-info {\\n        margin-bottom: 15px;\\n    }\\n\\n    .track-title {\\n        font-size: 1.2rem;\\n        font-weight: bold;\\n        color: #fff;\\n        margin-bottom: 5px;\\n        line-height: 1.3;\\n    }\\n\\n    .track-artist {\\n        font-size: 1rem;\\n        color: #00ffff;\\n        margin-bottom: 3px;\\n    }\\n\\n    .track-album {\\n        font-size: 0.9rem;\\n        color: #ccc;\\n        margin-bottom: 8px;\\n    }\\n\\n    .track-meta {\\n        display: flex;\\n        gap: 10px;\\n        flex-wrap: wrap;\\n    }\\n\\n    .meta-item {\\n        font-size: 0.8rem;\\n        color: #999;\\n        background: rgba(255, 255, 255, 0.1);\\n        padding: 2px 8px;\\n        border-radius: 12px;\\n    }\\n\\n    .meta-item.genre {\\n        background: rgba(255, 107, 157, 0.2);\\n        color: #ff6b9d;\\n    }\\n\\n    .meta-item.quality {\\n        background: rgba(0, 255, 136, 0.2);\\n        color: #00ff88;\\n    }\\n\\n    .meta-item.size {\\n        background: rgba(0, 255, 255, 0.2);\\n        color: #00ffff;\\n    }\\n\\n    .meta-item.seeders {\\n        background: rgba(255, 165, 0, 0.2);\\n        color: #ffa500;\\n    }\\n\\n    .meta-item.rating {\\n        background: rgba(255, 215, 0, 0.2);\\n        color: #ffd700;\\n    }\\n\\n    .meta-item.country {\\n        background: rgba(135, 206, 235, 0.2);\\n        color: #87ceeb;\\n    }\\n\\n    .meta-item.type {\\n        background: rgba(147, 112, 219, 0.2);\\n        color: #9370db;\\n    }\\n\\n    .meta-item.aliases {\\n        background: rgba(255, 182, 193, 0.2);\\n        color: #ffb6c1;\\n    }\\n\\n    .meta-item.isrcs {\\n        background: rgba(144, 238, 144, 0.2);\\n        color: #90ee90;\\n    }\\n\\n    .meta-item.score {\\n        background: rgba(255, 99, 71, 0.2);\\n        color: #ff6347;\\n    }\\n\\n    .source-info {\\n        position: absolute;\\n        top: 15px;\\n        right: 15px;\\n        display: flex;\\n        flex-direction: column;\\n        align-items: flex-end;\\n        gap: 5px;\\n    }\\n\\n    .source-badge {\\n        font-size: 0.8rem;\\n        padding: 4px 8px;\\n        border-radius: 12px;\\n        font-weight: bold;\\n        text-transform: uppercase;\\n    }\\n\\n    .source-badge.local {\\n        background: rgba(0, 255, 136, 0.2);\\n        color: #00ff88;\\n        border: 1px solid #00ff88;\\n    }\\n\\n    .source-badge.external {\\n        background: rgba(255, 107, 157, 0.2);\\n        color: #ff6b9d;\\n        border: 1px solid #ff6b9d;\\n    }\\n\\n    .source-badge.lidarr {\\n        background: rgba(255, 165, 0, 0.2);\\n        color: #ffa500;\\n        border: 1px solid #ffa500;\\n    }\\n\\n    .popularity {\\n        font-size: 0.7rem;\\n        color: #999;\\n    }\\n\\n    .indexer {\\n        font-size: 0.7rem;\\n        color: #ffa500;\\n        background: rgba(255, 165, 0, 0.1);\\n        padding: 2px 6px;\\n        border-radius: 8px;\\n        border: 1px solid rgba(255, 165, 0, 0.3);\\n    }\\n\\n    .track-actions {\\n        display: flex;\\n        gap: 10px;\\n        flex-wrap: wrap;\\n    }\\n\\n    .action-btn {\\n        background: rgba(0, 255, 255, 0.1);\\n        border: 1px solid #00ffff;\\n        color: #00ffff;\\n        padding: 8px 12px;\\n        border-radius: 8px;\\n        cursor: pointer;\\n        font-size: 0.9rem;\\n        font-weight: bold;\\n        transition: all 0.2s ease;\\n        text-decoration: none;\\n        display: inline-flex;\\n        align-items: center;\\n        gap: 5px;\\n    }\\n\\n    .action-btn:hover {\\n        background: rgba(0, 255, 255, 0.2);\\n        transform: translateY(-2px);\\n    }\\n\\n    .action-btn:disabled {\\n        opacity: 0.5;\\n        cursor: not-allowed;\\n        transform: none;\\n    }\\n\\n    .action-btn.play-btn {\\n        background: rgba(0, 255, 136, 0.1);\\n        border-color: #00ff88;\\n        color: #00ff88;\\n    }\\n\\n    .action-btn.play-btn:hover {\\n        background: rgba(0, 255, 136, 0.2);\\n    }\\n\\n    .action-btn.queue-btn {\\n        background: rgba(255, 107, 157, 0.1);\\n        border-color: #ff6b9d;\\n        color: #ff6b9d;\\n    }\\n\\n    .action-btn.queue-btn:hover {\\n        background: rgba(255, 107, 157, 0.2);\\n    }\\n\\n    .action-btn.download-btn {\\n        background: rgba(255, 165, 0, 0.1);\\n        border-color: #ffa500;\\n        color: #ffa500;\\n    }\\n\\n    .action-btn.download-btn:hover {\\n        background: rgba(255, 165, 0, 0.2);\\n    }\\n\\n    .action-btn.requesting {\\n        background: rgba(255, 255, 0, 0.1);\\n        border-color: #ffff00;\\n        color: #ffff00;\\n    }\\n\\n    .action-btn.monitoring {\\n        background: rgba(0, 255, 255, 0.1);\\n        border-color: #00ffff;\\n        color: #00ffff;\\n    }\\n\\n    .action-btn.external-link {\\n        background: rgba(128, 128, 128, 0.1);\\n        border-color: #888;\\n        color: #888;\\n    }\\n\\n    .action-btn.external-link:hover {\\n        background: rgba(128, 128, 128, 0.2);\\n    }\\n\\n    .action-btn.lidarr-download {\\n        background: rgba(255, 165, 0, 0.1);\\n        border-color: #ffa500;\\n        color: #ffa500;\\n        font-weight: bold;\\n    }\\n\\n    .action-btn.lidarr-download:hover {\\n        background: rgba(255, 165, 0, 0.2);\\n        box-shadow: 0 0 15px rgba(255, 165, 0, 0.3);\\n    }\\n\\n    .action-btn.magnet-link {\\n        background: rgba(138, 43, 226, 0.1);\\n        border-color: #8a2be2;\\n        color: #8a2be2;\\n    }\\n\\n    .action-btn.magnet-link:hover {\\n        background: rgba(138, 43, 226, 0.2);\\n    }\\n\\n    /* Error and Empty States */\\n    .error-message,\\n    .no-results,\\n    .search-help {\\n        text-align: center;\\n        padding: 60px 20px;\\n        color: #ccc;\\n    }\\n\\n    .error-icon,\\n    .no-results-icon,\\n    .help-icon {\\n        font-size: 3rem;\\n        margin-bottom: 20px;\\n        display: block;\\n    }\\n\\n    .error-message h3,\\n    .no-results h3,\\n    .search-help h3 {\\n        color: #fff;\\n        font-size: 1.5rem;\\n        margin-bottom: 10px;\\n    }\\n\\n    .retry-btn {\\n        background: rgba(255, 107, 157, 0.1);\\n        border: 1px solid #ff6b9d;\\n        color: #ff6b9d;\\n        padding: 10px 20px;\\n        border-radius: 8px;\\n        cursor: pointer;\\n        font-weight: bold;\\n        margin-top: 15px;\\n        transition: all 0.2s ease;\\n    }\\n\\n    .retry-btn:hover {\\n        background: rgba(255, 107, 157, 0.2);\\n    }\\n\\n    /* Mobile Responsive */\\n    @media (max-width: 768px) {\\n        .global-search {\\n            padding: 15px;\\n        }\\n\\n        .search-title {\\n            font-size: 2rem;\\n            flex-direction: column;\\n            gap: 10px;\\n        }\\n\\n        .search-filters {\\n            flex-direction: column;\\n            align-items: center;\\n        }\\n\\n        .results-header {\\n            flex-direction: column;\\n            align-items: flex-start;\\n        }\\n\\n        .results-legend {\\n            flex-direction: column;\\n            gap: 8px;\\n        }\\n\\n        .results-grid {\\n            grid-template-columns: 1fr;\\n        }\\n\\n        .track-actions {\\n            justify-content: center;\\n        }\\n\\n        .action-btn {\\n            font-size: 0.8rem;\\n            padding: 6px 10px;\\n        }\\n    }\\n\\n    /* Preview and Download Button States */\\n    .action-btn.preview-btn {\\n        background: rgba(138, 43, 226, 0.1);\\n        border-color: #8a2be2;\\n        color: #8a2be2;\\n    }\\n\\n    .action-btn.preview-btn:hover {\\n        background: rgba(138, 43, 226, 0.2);\\n    }\\n\\n    .action-btn.preview-btn.loading {\\n        background: rgba(255, 165, 0, 0.1);\\n        border-color: #ffa500;\\n        color: #ffa500;\\n        cursor: wait;\\n    }\\n\\n    .action-btn.preview-btn.available {\\n        background: rgba(50, 205, 50, 0.1);\\n        border-color: #32cd32;\\n        color: #32cd32;\\n    }\\n\\n    .action-btn.preview-btn.unavailable {\\n        background: rgba(128, 128, 128, 0.1);\\n        border-color: #808080;\\n        color: #808080;\\n        opacity: 0.6;\\n    }\\n\\n    .action-btn.download-btn.downloading {\\n        background: rgba(255, 165, 0, 0.1);\\n        border-color: #ffa500;\\n        color: #ffa500;\\n        cursor: wait;\\n    }\\n\\n    .action-btn.download-btn.success {\\n        background: rgba(50, 205, 50, 0.1);\\n        border-color: #32cd32;\\n        color: #32cd32;\\n    }\\n\\n    .action-btn.download-btn.failed {\\n        background: rgba(220, 20, 60, 0.1);\\n        border-color: #dc143c;\\n        color: #dc143c;\\n    }\\n\\n    .action-btn.download-btn.default {\\n        background: rgba(0, 191, 255, 0.1);\\n        border-color: #00bfff;\\n        color: #00bfff;\\n    }\\n\\n    .action-btn.download-btn.default:hover {\\n        background: rgba(0, 191, 255, 0.2);\\n        transform: translateY(-1px);\\n    }\\n\\n    /* Enhanced download states */\\n    .action-btn.queued {\\n        background: rgba(138, 43, 226, 0.1);\\n        border-color: #8a2be2;\\n        color: #8a2be2;\\n        cursor: wait;\\n    }\\n\\n    .action-btn.downloading {\\n        background: rgba(255, 165, 0, 0.1);\\n        border-color: #ffa500;\\n        color: #ffa500;\\n        cursor: wait;\\n        animation: pulse 2s infinite;\\n    }\\n\\n    .action-btn.completed {\\n        background: rgba(50, 205, 50, 0.1);\\n        border-color: #32cd32;\\n        color: #32cd32;\\n    }\\n\\n    .action-btn.paused {\\n        background: rgba(255, 215, 0, 0.1);\\n        border-color: #ffd700;\\n        color: #ffd700;\\n    }\\n\\n    .action-btn.monitoring {\\n        background: rgba(100, 149, 237, 0.1);\\n        border-color: #6495ed;\\n        color: #6495ed;\\n        cursor: wait;\\n    }\\n\\n    /* Download section container */\\n    .download-section {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 8px;\\n        align-items: flex-start;\\n    }\\n\\n    /* Download controls */\\n    .download-controls {\\n        display: flex;\\n        gap: 4px;\\n        margin-top: 4px;\\n    }\\n\\n    .small-btn {\\n        padding: 4px 8px;\\n        font-size: 12px;\\n        min-width: auto;\\n        height: 24px;\\n    }\\n\\n    .pause-btn {\\n        background: rgba(255, 215, 0, 0.1);\\n        border-color: #ffd700;\\n        color: #ffd700;\\n    }\\n\\n    .pause-btn:hover {\\n        background: rgba(255, 215, 0, 0.2);\\n    }\\n\\n    .cancel-btn {\\n        background: rgba(220, 20, 60, 0.1);\\n        border-color: #dc143c;\\n        color: #dc143c;\\n    }\\n\\n    .cancel-btn:hover {\\n        background: rgba(220, 20, 60, 0.2);\\n    }\\n\\n    /* Download info */\\n    .download-info {\\n        margin-top: 4px;\\n        font-size: 11px;\\n        color: rgba(255, 255, 255, 0.7);\\n        background: rgba(0, 0, 0, 0.2);\\n        padding: 2px 6px;\\n        border-radius: 4px;\\n    }\\n\\n    /* Pulse animation for downloading state */\\n    @keyframes pulse {\\n        0% {\\n            opacity: 1;\\n        }\\n        50% {\\n            opacity: 0.7;\\n        }\\n        100% {\\n            opacity: 1;\\n        }\\n    }\\n</style>\\n"],"names":[],"mappings":"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"}'
};
function formatDuration(seconds) {
  if (!seconds) return "";
  const mins = Math.floor(seconds / 60);
  const secs = seconds % 60;
  return `${mins}:${secs.toString().padStart(2, "0")}`;
}
const GlobalSearch = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { placeholder = "Search music globally..." } = $$props;
  let { showFilters = true } = $$props;
  let searchQuery = "";
  let searchResults = [];
  let isSearching = false;
  let downloadRequests = /* @__PURE__ */ new Map();
  let previewRequests = /* @__PURE__ */ new Map();
  let activeDownloads = /* @__PURE__ */ new Map();
  let downloadStatuses = /* @__PURE__ */ new Map();
  function getDownloadStatus(track) {
    const requestId = `${track.artist}-${track.title}`;
    const detailedStatus = downloadStatuses.get(requestId);
    if (detailedStatus) {
      return detailedStatus.status;
    }
    return downloadRequests.get(requestId) || null;
  }
  function getDownloadInfo(track) {
    const requestId = `${track.artist}-${track.title}`;
    return downloadStatuses.get(requestId) || null;
  }
  function getEnhancedDownloadState(track) {
    const requestId = `${track.artist}-${track.title}`;
    const basicStatus = downloadRequests.get(requestId);
    const detailedStatus = downloadStatuses.get(requestId);
    if (basicStatus === "requesting") {
      return {
        text: "⏳ Requesting...",
        disabled: true,
        class: "requesting"
      };
    }
    if (detailedStatus) {
      switch (detailedStatus.status) {
        case "queued":
          return {
            text: "📦 Queued",
            disabled: true,
            class: "queued"
          };
        case "downloading":
          const progress = Math.round((detailedStatus.progress || 0) * 100);
          return {
            text: `⬇️ ${progress}%`,
            disabled: true,
            class: "downloading"
          };
        case "completed":
          return {
            text: "✅ Completed",
            disabled: true,
            class: "completed"
          };
        case "failed":
        case "error":
          return {
            text: "🔄 Retry",
            disabled: false,
            class: "failed"
          };
        case "paused":
          return {
            text: "⏸️ Paused",
            disabled: true,
            class: "paused"
          };
        default:
          return {
            text: "👁️ Monitoring",
            disabled: true,
            class: "monitoring"
          };
      }
    }
    if (basicStatus === "monitoring") {
      return {
        text: "👁️ Monitoring",
        disabled: true,
        class: "monitoring"
      };
    }
    if (basicStatus === "failed") {
      return {
        text: "🔄 Retry",
        disabled: false,
        class: "failed"
      };
    }
    if (basicStatus === "completed") {
      return {
        text: "✅ Complete",
        disabled: true,
        class: "completed"
      };
    }
    return {
      text: `⬇️ Get ${track.quality || "Music"}`,
      disabled: false,
      class: "default"
    };
  }
  function getDownloadButtonState(track) {
    const requestKey = track.musicbrainz_id || track.id;
    const status = downloadRequests.get(requestKey);
    const hasActiveDownloads = activeDownloads.has(requestKey);
    if (status === "downloading") return {
      text: "Searching...",
      disabled: true,
      class: "downloading"
    };
    if (status === "success" && hasActiveDownloads) return {
      text: "Available",
      disabled: false,
      class: "success"
    };
    if (status === "success") return {
      text: "Added to Monitor",
      disabled: true,
      class: "success"
    };
    if (status === "failed") return {
      text: "Try Again",
      disabled: false,
      class: "failed"
    };
    return {
      text: "Download",
      disabled: false,
      class: "default"
    };
  }
  function getPreviewButtonState(track) {
    const requestKey = track.musicbrainz_id || track.id;
    const status = previewRequests.get(requestKey);
    if (status === "loading") return {
      text: "Loading...",
      disabled: true,
      class: "loading"
    };
    if (status === "available") return {
      text: "Play Preview",
      disabled: false,
      class: "available"
    };
    if (status === "unavailable") return {
      text: "No Preview",
      disabled: true,
      class: "unavailable"
    };
    return {
      text: "Preview",
      disabled: false,
      class: "default"
    };
  }
  if ($$props.placeholder === void 0 && $$bindings.placeholder && placeholder !== void 0) $$bindings.placeholder(placeholder);
  if ($$props.showFilters === void 0 && $$bindings.showFilters && showFilters !== void 0) $$bindings.showFilters(showFilters);
  $$result.css.add(css$1);
  return `<div class="${["global-search svelte-7n2d85", ""].join(" ").trim()}"> <div class="search-header svelte-7n2d85" data-svelte-h="svelte-9q5j2l"><h2 class="search-title svelte-7n2d85"><span class="title-icon svelte-7n2d85">🔍</span>
            Global Music Search</h2> <p class="search-subtitle svelte-7n2d85">Search your library and discover new music from external sources</p></div>  <div class="search-controls svelte-7n2d85"> <div class="search-input-container svelte-7n2d85"><div class="search-input-wrapper svelte-7n2d85"><input type="text" class="search-input svelte-7n2d85"${add_attribute("placeholder", placeholder, 0)} autocomplete="off"${add_attribute("value", searchQuery, 0)}> <div class="search-icon svelte-7n2d85" data-svelte-h="svelte-6duvnh">🔍</div> ${``} ${``}</div>  <button class="search-submit-btn svelte-7n2d85" ${searchQuery.trim().length < 2 || isSearching ? "disabled" : ""}>${`Search`}</button></div>  ${showFilters ? `<div class="search-filters svelte-7n2d85"><div class="filter-group svelte-7n2d85"><label class="filter-label svelte-7n2d85" data-svelte-h="svelte-ihfsv2">Search Type:</label> <select class="filter-select svelte-7n2d85"><option value="global" data-svelte-h="svelte-14aecnw">All Sources</option><option value="local" data-svelte-h="svelte-x3k7z8">Local Only</option><option value="external" data-svelte-h="svelte-1l12pru">External Only</option></select></div> <div class="filter-group svelte-7n2d85"><label class="filter-label svelte-7n2d85" data-svelte-h="svelte-k2mh45">Search for:</label> <select class="filter-select svelte-7n2d85"><option value="all" data-svelte-h="svelte-1ac8m16">Everything</option><option value="artist" data-svelte-h="svelte-4hq49l">Artists</option><option value="album" data-svelte-h="svelte-149aohn">Albums</option><option value="track" data-svelte-h="svelte-160u72j">Tracks</option></select></div> <div class="filter-group svelte-7n2d85"><label class="filter-label svelte-7n2d85" data-svelte-h="svelte-1a61m3p">Sort by:</label> <select class="filter-select svelte-7n2d85"><option value="relevance" data-svelte-h="svelte-s2j5o8">Relevance</option><option value="popularity" data-svelte-h="svelte-fjof4u">Popularity</option><option value="year" data-svelte-h="svelte-1f4f6ga">Year</option><option value="duration" data-svelte-h="svelte-jl9efy">Duration</option></select></div></div>` : ``}</div>  <div class="search-results">${`${searchResults.length > 0 ? `<div class="results-header svelte-7n2d85"><h3 class="svelte-7n2d85">Search Results (${escape(searchResults.length)})</h3> <div class="results-legend svelte-7n2d85" data-svelte-h="svelte-ndcegg"><span class="legend-item svelte-7n2d85"><span class="source-badge local svelte-7n2d85">Local</span>
                        Available in library</span> <span class="legend-item svelte-7n2d85"><span class="source-badge external svelte-7n2d85">External</span>
                        Can be downloaded</span></div></div> <div class="results-grid svelte-7n2d85">${each(searchResults, (track) => {
    return `<div class="${[
      "track-card svelte-7n2d85",
      (track.source === "local" ? "local" : "") + " " + (track.source !== "local" ? "external" : "")
    ].join(" ").trim()}"> <div class="track-info svelte-7n2d85"><h4 class="track-title svelte-7n2d85">${escape(track.title)}</h4> <p class="track-artist svelte-7n2d85">${escape(track.artist)}</p> <p class="track-album svelte-7n2d85">${escape(track.album || "Unknown Album")}</p> <div class="track-meta svelte-7n2d85">${track.year ? `<span class="meta-item svelte-7n2d85">📅 ${escape(track.year)}</span>` : ``} ${track.duration ? `<span class="meta-item svelte-7n2d85">⏱️ ${escape(formatDuration(track.duration))}</span>` : ``} ${track.genre ? `<span class="meta-item genre svelte-7n2d85">🎵 ${escape(track.genre)}</span>` : ``} ${track.source === "lidarr" ? `${track.quality ? `<span class="meta-item quality svelte-7n2d85">🎧 ${escape(track.quality)}</span>` : ``} ${track.size_mb ? `<span class="meta-item size svelte-7n2d85">💾 ${escape(track.size_mb)}MB</span>` : ``} ${track.seeders !== void 0 ? `<span class="meta-item seeders svelte-7n2d85">🌱 ${escape(track.seeders)}↑ ${escape(track.leechers)}↓</span>` : ``}` : ``} ${track.source === "musicbrainz" ? `${track.rating && track.rating > 0 ? `<span class="meta-item rating svelte-7n2d85">⭐ ${escape(track.rating)}/5</span>` : ``} ${track.country ? `<span class="meta-item country svelte-7n2d85">🌍 ${escape(track.country)}</span>` : ``} ${track.type ? `<span class="meta-item type svelte-7n2d85">🏷️ ${escape(track.type)}</span>` : ``} ${track.aliases && track.aliases.length > 0 ? `<span class="meta-item aliases svelte-7n2d85">📝 ${escape(track.aliases)}</span>` : ``} ${track.isrcs && track.isrcs.length > 0 ? `<span class="meta-item isrcs svelte-7n2d85" data-svelte-h="svelte-1gag0e6">🔢 ISRC</span>` : ``} ${track.score && track.score > 0 ? `<span class="meta-item score svelte-7n2d85">🎯 ${escape(track.score)}% match</span>` : ``}` : ``} </div></div>  <div class="source-info svelte-7n2d85"><span class="${[
      "source-badge svelte-7n2d85",
      (track.source === "local" ? "local" : "") + " " + (track.source !== "local" && track.source !== "lidarr" ? "external" : "") + " " + (track.source === "lidarr" ? "lidarr" : "")
    ].join(" ").trim()}">${track.source === "local" ? `🏠 Local` : `${track.source === "lidarr" ? `⬇️ Download` : `🌐 External`}`}</span> ${track.popularity ? `<span class="popularity svelte-7n2d85">${escape("★".repeat(Math.ceil(track.popularity / 20)))} </span>` : ``} ${track.source === "lidarr" && track.indexer ? `<span class="indexer svelte-7n2d85">📡 ${escape(track.indexer)}</span>` : ``}</div>  <div class="track-actions svelte-7n2d85">${track.available && track.stream_url ? `<button class="action-btn play-btn svelte-7n2d85" title="Play Track" data-svelte-h="svelte-1ym6d5r">▶️ Play</button> <button class="action-btn queue-btn svelte-7n2d85" title="Add to Queue" data-svelte-h="svelte-5sedep">➕ Queue
                                </button>` : `${track.source === "musicbrainz" ? (() => {
      let downloadState = getDownloadButtonState(track);
      return ` ${track.type === "track" ? (() => {
        let previewState = getPreviewButtonState(track);
        return ` <button class="${"action-btn preview-btn " + escape(previewState.class, true) + " svelte-7n2d85"}" ${previewState.disabled ? "disabled" : ""}>🎵 ${escape(previewState.text)} </button>`;
      })() : ``}  <button class="${"action-btn download-btn " + escape(downloadState.class, true) + " svelte-7n2d85"}" ${downloadState.disabled ? "disabled" : ""}>⬇ ${escape(downloadState.text)}</button> ${track.external_url ? `<a${add_attribute("href", track.external_url, 0)} target="_blank" rel="noopener noreferrer" class="action-btn external-link svelte-7n2d85">🔗 MusicBrainz
                                    </a>` : ``}`;
    })() : `${track.source === "lidarr" && track.downloadable ? (() => {
      let downloadState = getEnhancedDownloadState(track), downloadInfo = getDownloadInfo(track);
      return `  <div class="download-section svelte-7n2d85"><button class="${"action-btn download-btn " + escape(downloadState.class, true) + " svelte-7n2d85"}" ${downloadState.disabled ? "disabled" : ""} title="${"Download " + escape(track.quality, true) + " - " + escape(track.size_mb, true) + "MB"}">${escape(downloadState.text)}</button> ${downloadInfo && (downloadInfo.status === "downloading" || downloadInfo.status === "queued") ? `<div class="download-controls svelte-7n2d85">${downloadInfo.status === "downloading" ? `<button class="action-btn small-btn pause-btn svelte-7n2d85" title="Pause Download" data-svelte-h="svelte-ylmk6x">⏸️
                                                </button>` : ``} <button class="action-btn small-btn cancel-btn svelte-7n2d85" title="Cancel Download" data-svelte-h="svelte-7f19p0">❌
                                            </button></div> ${downloadInfo.download_speed ? `<div class="download-info svelte-7n2d85"><small>Speed: ${escape(Math.round(downloadInfo.download_speed / 1024))} KB/s</small> </div>` : ``}` : ``}</div> ${track.magnet_url ? `<a${add_attribute("href", track.magnet_url, 0)} target="_blank" rel="noopener noreferrer" class="action-btn external-link magnet-link svelte-7n2d85" title="Open Magnet Link">🧲 Magnet
                                    </a>` : ``}`;
    })() : `${getDownloadStatus(track) === "requesting" ? `<button class="action-btn requesting svelte-7n2d85" disabled data-svelte-h="svelte-1x2gkq3">⏳ Requesting...
                                    </button>` : `${getDownloadStatus(track) === "monitoring" ? `<button class="action-btn monitoring svelte-7n2d85" disabled data-svelte-h="svelte-1yzm8id">👁️ Monitoring
                                    </button>` : `${getDownloadStatus(track) === "failed" ? `<button class="action-btn download-btn svelte-7n2d85" title="Retry Download" data-svelte-h="svelte-ui95cm">🔄 Retry Download
                                    </button>` : `<button class="action-btn download-btn svelte-7n2d85" title="Request Download" data-svelte-h="svelte-gu1b56">⬇️ Download
                                    </button>`}`}`} ${track.external_url ? `<a${add_attribute("href", track.external_url, 0)} target="_blank" rel="noopener noreferrer" class="action-btn external-link svelte-7n2d85" title="Open External Link">🔗 Open
                                    </a>` : ``}`}`}`}</div> </div>`;
  })}</div>` : `${searchQuery.length >= 2 && !isSearching ? `<div class="no-results svelte-7n2d85"><span class="no-results-icon svelte-7n2d85" data-svelte-h="svelte-simyq5">🔍</span> <h3 class="svelte-7n2d85" data-svelte-h="svelte-16cn29t">No Results Found</h3> <p>No tracks found for &quot;${escape(searchQuery)}&quot;. Try different keywords
                    or check external sources.</p></div>` : `${searchQuery.length < 2 ? `<div class="search-help svelte-7n2d85" data-svelte-h="svelte-heud2i"><span class="help-icon svelte-7n2d85">💡</span> <h3 class="svelte-7n2d85">Start Searching</h3> <p>Enter at least 2 characters to search for music across your
                    library and external sources.</p></div>` : ``}`}`}`}</div> </div>`;
});
const css = {
  code: ".search-page.svelte-1d55oyn{opacity:0;transition:opacity 0.5s ease-in-out;min-height:100vh;padding:var(--spacing-lg) 0;background:linear-gradient(135deg, rgba(10, 10, 15, 0.95), rgba(20, 20, 30, 0.95))}.search-page.loaded.svelte-1d55oyn{opacity:1}.container.svelte-1d55oyn{max-width:1400px;margin:0 auto;padding:0 var(--spacing-md)}.search-page.svelte-1d55oyn{padding-bottom:100px}@media(max-width: 768px){.search-page.svelte-1d55oyn{padding:var(--spacing-md) 0 120px 0}.container.svelte-1d55oyn{padding:0 var(--spacing-sm)}}.search-page.svelte-1d55oyn::before{content:'';position:fixed;top:0;left:0;width:100%;height:100%;background:radial-gradient(circle at 20% 80%, rgba(0, 255, 255, 0.1) 0%, transparent 50%),\n			radial-gradient(circle at 80% 20%, rgba(255, 107, 157, 0.1) 0%, transparent 50%);pointer-events:none;z-index:-1}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n\\timport { onMount } from 'svelte';\\n\\timport GlobalSearch from '$lib/components/GlobalSearch.svelte';\\n\\n\\tlet mounted = false;\\n\\n\\tonMount(() => {\\n\\t\\tmounted = true;\\n\\t});\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>Global Search - StepheyBot Music</title>\\n\\t<meta name=\\"description\\" content=\\"Search for music across your library and external sources. Discover new tracks and request downloads with StepheyBot Music's global search.\\" />\\n</svelte:head>\\n\\n<div class=\\"search-page\\" class:loaded={mounted}>\\n\\t<div class=\\"container\\">\\n\\t\\t<GlobalSearch />\\n\\t</div>\\n</div>\\n\\n<style>\\n\\t.search-page {\\n\\t\\topacity: 0;\\n\\t\\ttransition: opacity 0.5s ease-in-out;\\n\\t\\tmin-height: 100vh;\\n\\t\\tpadding: var(--spacing-lg) 0;\\n\\t\\tbackground: linear-gradient(135deg, rgba(10, 10, 15, 0.95), rgba(20, 20, 30, 0.95));\\n\\t}\\n\\n\\t.search-page.loaded {\\n\\t\\topacity: 1;\\n\\t}\\n\\n\\t.container {\\n\\t\\tmax-width: 1400px;\\n\\t\\tmargin: 0 auto;\\n\\t\\tpadding: 0 var(--spacing-md);\\n\\t}\\n\\n\\t/* Ensure proper spacing for floating music player */\\n\\t.search-page {\\n\\t\\tpadding-bottom: 100px;\\n\\t}\\n\\n\\t/* Responsive adjustments */\\n\\t@media (max-width: 768px) {\\n\\t\\t.search-page {\\n\\t\\t\\tpadding: var(--spacing-md) 0 120px 0;\\n\\t\\t}\\n\\n\\t\\t.container {\\n\\t\\t\\tpadding: 0 var(--spacing-sm);\\n\\t\\t}\\n\\t}\\n\\n\\t/* Add some visual enhancements */\\n\\t.search-page::before {\\n\\t\\tcontent: '';\\n\\t\\tposition: fixed;\\n\\t\\ttop: 0;\\n\\t\\tleft: 0;\\n\\t\\twidth: 100%;\\n\\t\\theight: 100%;\\n\\t\\tbackground:\\n\\t\\t\\tradial-gradient(circle at 20% 80%, rgba(0, 255, 255, 0.1) 0%, transparent 50%),\\n\\t\\t\\tradial-gradient(circle at 80% 20%, rgba(255, 107, 157, 0.1) 0%, transparent 50%);\\n\\t\\tpointer-events: none;\\n\\t\\tz-index: -1;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAuBC,2BAAa,CACZ,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,IAAI,CAAC,WAAW,CACpC,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,IAAI,YAAY,CAAC,CAAC,CAAC,CAC5B,UAAU,CAAE,gBAAgB,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CACnF,CAEA,YAAY,sBAAQ,CACnB,OAAO,CAAE,CACV,CAEA,yBAAW,CACV,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,CAAC,CAAC,IAAI,YAAY,CAC5B,CAGA,2BAAa,CACZ,cAAc,CAAE,KACjB,CAGA,MAAO,YAAY,KAAK,CAAE,CACzB,2BAAa,CACZ,OAAO,CAAE,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CACpC,CAEA,yBAAW,CACV,OAAO,CAAE,CAAC,CAAC,IAAI,YAAY,CAC5B,CACD,CAGA,2BAAY,QAAS,CACpB,OAAO,CAAE,EAAE,CACX,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CACT,gBAAgB,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC;AACjF,GAAG,gBAAgB,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CACjF,cAAc,CAAE,IAAI,CACpB,OAAO,CAAE,EACV"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css);
  return `${$$result.head += `<!-- HEAD_svelte-1oh74el_START -->${$$result.title = `<title>Global Search - StepheyBot Music</title>`, ""}<meta name="description" content="Search for music across your library and external sources. Discover new tracks and request downloads with StepheyBot Music's global search."><!-- HEAD_svelte-1oh74el_END -->`, ""} <div class="${["search-page svelte-1d55oyn", ""].join(" ").trim()}"><div class="container svelte-1d55oyn">${validate_component(GlobalSearch, "GlobalSearch").$$render($$result, {}, {}, {})}</div> </div>`;
});
export {
  Page as default
};
